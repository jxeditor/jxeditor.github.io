{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///flowchart.js","webpack:///webpack/bootstrap 6e793fc3ff9a4cf3cefa","webpack:///./index.js","webpack:///./src/flowchart.helpers.js","webpack:///./src/flowchart.symbol.js","webpack:///./src/flowchart.functions.js","webpack:///./src/flowchart.parse.js","webpack:///./src/flowchart.symbol.condition.js","webpack:///./src/flowchart.symbol.parallel.js","webpack:///./src/flowchart.chart.js","webpack:///./src/flowchart.defaults.js","webpack:///./src/flowchart.shim.js","webpack:///./src/flowchart.symbol.end.js","webpack:///./src/flowchart.symbol.inputoutput.js","webpack:///./src/flowchart.symbol.operation.js","webpack:///./src/flowchart.symbol.start.js","webpack:///./src/flowchart.symbol.subroutine.js","webpack:///./src/jquery-plugin.js","webpack:///external \"Raphael\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_16__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","parse","FlowChart","window","flowchart","_defaults","options","defaultOptions","merged","attrname","_inherits","ctor","superCtor","Object","super_","prototype","create","constructor","value","enumerable","writable","configurable","TempCtor","defaults","inherits","Symbol","chart","symbol","group","paper","set","connectedTo","symbolType","flowstate","lineStyle","key","next_direction","next","undefined","text","node","setAttribute","getAttr","attr","text-anchor","x","fill","font-size","font","fontF","fontW","font-family","font-weight","link","function","cursor","addEventListener","evt","target","maxWidth","words","split","tempText","ii","length","word","getBBox","width","substring","push","tmpMargin","stroke","stroke-width","height","insertBefore","y","initialize","drawAPI","drawLine","checkLineIntersection","attName","opt1","opt3","opt2","symbols","transform","getCenter","getX","getY","shiftX","setX","shiftY","setY","getTop","getBottom","getLeft","getRight","render","self","lineLength","rightPoint","isPositioned","shift","symb","hasSymbolUnder","len","diff","Math","abs","leftPoint","bottomPoint","renderLines","drawLineTo","origin","indexOf","line","right","bottom","top","left","symbolX","symbolY","symbolTop","symbolRight","symbolLeft","isOnSameColumn","isOnSameLine","isUnder","isUpper","isLeft","isRight","maxX","lineWith","rightStart","topEnd","bottomStart","diffX","leftStart","topStart","leftEnd","rightEnd","l","llen","lines","otherLine","ePath","lPath","iP","lenP","newPath","line1_from_x","line1_from_y","line1_to_x","line1_to_y","lP","lenlP","newLinePath","line2_from_x","line2_from_y","line2_to_x","line2_to_y","res","onLine1","onLine2","newSegment","splice","minXFromSymbols","maxXFromLine","drawPath","location","points","path","pathValues","from","to","toString","arrow-end","centerText","textPath","isHorizontal","firstTo","line1StartX","line1StartY","line1EndX","line1EndY","line2StartX","line2StartY","line2EndX","line2EndY","denominator","b","numerator1","numerator2","result","input","getStyle","s","startIndex","endIndex","getSymbValue","getSymbol","getNextPath","flowSymb","trim","start","drawSVG","container","getDisplaySymbol","dispSymbols","Start","diagram","End","Operation","InputOutput","Subroutine","Condition","Parallel","Error","clean","constructChart","prevDisp","prev","dispSymb","startWith","pathOk","yes","no","path1","path2","path3","then","prevBreak","i0","i0len","line0","replace","substr","currentLine","parts","params","match","entries","entry","sub","join","txtAndState","pop","flowSymbols","lenS","symbVal","realSymb","direction","condOpt","nextSymb","lineStyleSymbols","curSymb","JSON","textMargin","yes_direction","no_direction","direction_yes","direction_no","max","startX","startY","yes_symbol","no_symbol","bottom_symbol","right_symbol","rect","path1_direction","path2_direction","path3_direction","direction_next","direction_path1","direction_path2","direction_path3","path1_symbol","path2_symbol","path3_symbol","top_symbol","topPoint","left_symbol","Raphael","handle","flowChart","nextSymbol","maxHeight","maxY","minX","minY","x2","y2","scale","lineWidth","setSize","setViewBox","paperDom","canvas","parentNode","removeChild","line-width","line-length","text-margin","font-color","line-color","element-color","yes-text","no-text","class","end","condition","inputoutput","operation","subroutine","parallel","Array","searchElement","TypeError","t","n","arguments","Number","Infinity","floor","k","lastIndexOf","min","String","innerWrap","jQuery","$","fn","each","$this","html"],"mappings":"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","file":"flowchart.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Raphael\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Raphael\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"Raphael\")) : factory(root[\"Raphael\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_16__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Raphael\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Raphael\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"Raphael\")) : factory(root[\"Raphael\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_16__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(/*! ./src/flowchart.shim */ 9);\n\tvar parse = __webpack_require__(/*! ./src/flowchart.parse */ 4);\n\t__webpack_require__(/*! ./src/jquery-plugin */ 15);\n\t\n\tvar FlowChart = {\n\t\tparse: parse\n\t};\n\t\n\tif (typeof window !== 'undefined') {\n\t\twindow.flowchart = FlowChart;\n\t}\n\t\n\tmodule.exports = FlowChart;\n\n\n/***/ }),\n/* 1 */\n/*!**********************************!*\\\n  !*** ./src/flowchart.helpers.js ***!\n  \\**********************************/\n/***/ (function(module, exports) {\n\n\tfunction _defaults(options, defaultOptions) {\n\t  if (!options || typeof options === 'function') {\n\t    return defaultOptions;\n\t  }\n\t\n\t  var merged = {};\n\t  for (var attrname in defaultOptions) {\n\t    merged[attrname] = defaultOptions[attrname];\n\t  }\n\t\n\t  for (attrname in options) {\n\t    if (options[attrname]) {\n\t      if (typeof merged[attrname] === 'object') {\n\t        merged[attrname] = _defaults(merged[attrname], options[attrname]);\n\t      } else {\n\t        merged[attrname] = options[attrname];\n\t      }\n\t    }\n\t  }\n\t  return merged;\n\t}\n\t\n\tfunction _inherits(ctor, superCtor) {\n\t  if (typeof(Object.create) === 'function') {\n\t    // implementation from standard node.js 'util' module\n\t    ctor.super_ = superCtor;\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  } else {\n\t    // old school shim for old browsers\n\t    ctor.super_ = superCtor;\n\t    var TempCtor = function () {};\n\t    TempCtor.prototype = superCtor.prototype;\n\t    ctor.prototype = new TempCtor();\n\t    ctor.prototype.constructor = ctor;\n\t  }\n\t}\n\t\n\t// move dependent functions to a container so that\n\t// they can be overriden easier in no jquery environment (node.js)\n\tmodule.exports = {\n\t  defaults: _defaults,\n\t  inherits: _inherits\n\t};\n\n\n/***/ }),\n/* 2 */\n/*!*********************************!*\\\n  !*** ./src/flowchart.symbol.js ***!\n  \\*********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\n\tvar drawLine = drawAPI.drawLine;\n\tvar checkLineIntersection = drawAPI.checkLineIntersection;\n\t\n\tfunction Symbol(chart, options, symbol) {\n\t  this.chart = chart;\n\t  this.group = this.chart.paper.set();\n\t  this.symbol = symbol;\n\t  this.connectedTo = [];\n\t  this.symbolType = options.symbolType;\n\t  this.flowstate = (options.flowstate || 'future');\n\t  this.lineStyle = (options.lineStyle || {});\n\t  this.key = (options.key || '');\n\t\n\t  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\n\t\n\t  this.text = this.chart.paper.text(0, 0, options.text);\n\t  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\n\t  if (options.key) { this.text.node.id = options.key + 't'; }\n\t  this.text.node.setAttribute('class', this.getAttr('class') + 't');\n\t\n\t  this.text.attr({\n\t    'text-anchor': 'start',\n\t    'x'          : this.getAttr('text-margin'),\n\t    'fill'       : this.getAttr('font-color'),\n\t    'font-size'  : this.getAttr('font-size')\n\t  });\n\t\n\t  var font  = this.getAttr('font');\n\t  var fontF = this.getAttr('font-family');\n\t  var fontW = this.getAttr('font-weight');\n\t\n\t  if (font) this.text.attr({ 'font': font });\n\t  if (fontF) this.text.attr({ 'font-family': fontF });\n\t  if (fontW) this.text.attr({ 'font-weight': fontW });\n\t\n\t  if (options.link) { this.text.attr('href', options.link); }\n\t  \n\t  //ndrqu Add click function with event and options params\n\t  if (options.function) { \n\t    this.text.attr({ 'cursor' : 'pointer' });\n\t\n\t    this.text.node.addEventListener(\"click\", function(evt) {\n\t        window[options.function](evt,options);\n\t    }, false);\n\t   }\n\t   \n\t  if (options.target) { this.text.attr('target', options.target); }\n\t\n\t  var maxWidth = this.getAttr('maxWidth');\n\t  if (maxWidth) {\n\t    // using this approach: http://stackoverflow.com/a/3153457/22466\n\t    var words = options.text.split(' ');\n\t    var tempText = \"\";\n\t    for (var i=0, ii=words.length; i<ii; i++) {\n\t      var word = words[i];\n\t      this.text.attr(\"text\", tempText + \" \" + word);\n\t      if (this.text.getBBox().width > maxWidth) {\n\t        tempText += \"\\n\" + word;\n\t      } else {\n\t        tempText += \" \" + word;\n\t      }\n\t    }\n\t    this.text.attr(\"text\", tempText.substring(1));\n\t  }\n\t\n\t  this.group.push(this.text);\n\t\n\t  if (symbol) {\n\t    var tmpMargin = this.getAttr('text-margin');\n\t\n\t    symbol.attr({\n\t      'fill' : this.getAttr('fill'),\n\t      'stroke' : this.getAttr('element-color'),\n\t      'stroke-width' : this.getAttr('line-width'),\n\t      'width' : this.text.getBBox().width + 2 * tmpMargin,\n\t      'height' : this.text.getBBox().height + 2 * tmpMargin\n\t    });\n\t\n\t    symbol.node.setAttribute('class', this.getAttr('class'));\n\t\n\t    if (options.link) { symbol.attr('href', options.link); }\n\t    if (options.target) { symbol.attr('target', options.target); }\n\t\n\t    //ndrqu Add click function with event and options params\n\t    if (options.function) { \n\t        symbol.node.addEventListener(\"click\", function(evt) {\n\t          window[options.function](evt,options);\n\t        }, false);\n\t      symbol.attr({ 'cursor' : 'pointer' });\n\t    }\n\t    if (options.key) { symbol.node.id = options.key; }\n\t\n\t    this.group.push(symbol);\n\t    symbol.insertBefore(this.text);\n\t\n\t    this.text.attr({\n\t      'y': symbol.getBBox().height/2\n\t    });\n\t\n\t    this.initialize();\n\t  }\n\t\n\t}\n\t\n\t/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\n\tSymbol.prototype.getAttr = function(attName) {\n\t  if (!this.chart) {\n\t    return undefined;\n\t  }\n\t  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\n\t  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\n\t  var opt1;\n\t  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\n\t    opt1 = this.chart.options.flowstate[this.flowstate][attName];\n\t  }\n\t  return (opt1 || opt2 || opt3);\n\t};\n\t\n\tSymbol.prototype.initialize = function() {\n\t  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\n\t\n\t  this.width = this.group.getBBox().width;\n\t  this.height = this.group.getBBox().height;\n\t};\n\t\n\tSymbol.prototype.getCenter = function() {\n\t  return {x: this.getX() + this.width/2,\n\t          y: this.getY() + this.height/2};\n\t};\n\t\n\tSymbol.prototype.getX = function() {\n\t  return this.group.getBBox().x;\n\t};\n\t\n\tSymbol.prototype.getY = function() {\n\t  return this.group.getBBox().y;\n\t};\n\t\n\tSymbol.prototype.shiftX = function(x) {\n\t  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\n\t};\n\t\n\tSymbol.prototype.setX = function(x) {\n\t  this.group.transform('t' + x + ',' + this.getY());\n\t};\n\t\n\tSymbol.prototype.shiftY = function(y) {\n\t  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\n\t};\n\t\n\tSymbol.prototype.setY = function(y) {\n\t  this.group.transform('t' + this.getX() + ',' + y);\n\t};\n\t\n\tSymbol.prototype.getTop = function() {\n\t  var y = this.getY();\n\t  var x = this.getX() + this.width/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getBottom = function() {\n\t  var y = this.getY() + this.height;\n\t  var x = this.getX() + this.width/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getLeft = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX();\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getRight = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX() + this.group.getBBox().width;\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.render = function() {\n\t  if (this.next) {\n\t\n\t    var self = this;\n\t    var lineLength = this.getAttr('line-length');\n\t\n\t    if (this.next_direction === 'right') {\n\t\n\t      var rightPoint = this.getRight();\n\t\n\t      if (!this.next.isPositioned) {\n\t        this.next.setY(rightPoint.y - this.next.height/2);\n\t        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\n\t\n\t        (function shift() {\n\t          var hasSymbolUnder = false;\n\t          var symb;\n\t          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n\t            symb = self.chart.symbols[i];\n\t\n\t            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\n\t            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\n\t              hasSymbolUnder = true;\n\t              break;\n\t            }\n\t          }\n\t\n\t          if (hasSymbolUnder) {\n\t            if (self.next.symbolType === 'end') return;\n\t            self.next.setX(symb.getX() + symb.width + lineLength);\n\t            shift();\n\t          }\n\t        })();\n\t\n\t        this.next.isPositioned = true;\n\t\n\t        this.next.render();\n\t      }\n\t    } else if (this.next_direction === 'left') {\n\t\n\t      var leftPoint = this.getLeft();\n\t\n\t      if (!this.next.isPositioned) {\n\t        this.next.setY(leftPoint.y - this.next.height/2);\n\t        this.next.shiftX(-(this.group.getBBox().x + this.width + lineLength));\n\t\n\t        (function shift() {\n\t          var hasSymbolUnder = false;\n\t          var symb;\n\t          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n\t            symb = self.chart.symbols[i];\n\t\n\t            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\n\t            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\n\t              hasSymbolUnder = true;\n\t              break;\n\t            }\n\t          }\n\t\n\t          if (hasSymbolUnder) {\n\t            if (self.next.symbolType === 'end') return;\n\t            self.next.setX(symb.getX() + symb.width + lineLength);\n\t            shift();\n\t          }\n\t        })();\n\t\n\t        this.next.isPositioned = true;\n\t\n\t        this.next.render();\n\t      }\n\t    } else {\n\t      var bottomPoint = this.getBottom();\n\t\n\t      if (!this.next.isPositioned) {\n\t        this.next.shiftY(this.getY() + this.height + lineLength);\n\t        this.next.setX(bottomPoint.x - this.next.width/2);\n\t        this.next.isPositioned = true;\n\t\n\t        this.next.render();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tSymbol.prototype.renderLines = function() {\n\t  if (this.next) {\n\t    if (this.next_direction) {\n\t      this.drawLineTo(this.next, this.getAttr('arrow-text') || '', this.next_direction);\n\t    } else {\n\t      this.drawLineTo(this.next, this.getAttr('arrow-text') || '');\n\t    }\n\t  }\n\t};\n\t\n\tSymbol.prototype.drawLineTo = function(symbol, text, origin) {\n\t  if (this.connectedTo.indexOf(symbol) < 0) {\n\t    this.connectedTo.push(symbol);\n\t  }\n\t\n\t  var x = this.getCenter().x,\n\t      y = this.getCenter().y,\n\t      right = this.getRight(),\n\t      bottom = this.getBottom(),\n\t      top = this.getTop(),\n\t      left = this.getLeft();\n\t\n\t  var symbolX = symbol.getCenter().x,\n\t      symbolY = symbol.getCenter().y,\n\t      symbolTop = symbol.getTop(),\n\t      symbolRight = symbol.getRight(),\n\t      symbolLeft = symbol.getLeft();\n\t\n\t  var isOnSameColumn = x === symbolX,\n\t      isOnSameLine = y === symbolY,\n\t      isUnder = y < symbolY,\n\t      isUpper = y > symbolY || this === symbol,\n\t      isLeft = x > symbolX,\n\t      isRight = x < symbolX;\n\t\n\t  var maxX = 0,\n\t      line,\n\t      lineLength = this.getAttr('line-length'),\n\t      lineWith = this.getAttr('line-width');\n\t\n\t  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\n\t    line = drawLine(this.chart, bottom, symbolTop, text);\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x;\n\t  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\n\t    line = drawLine(this.chart, right, symbolLeft, text);\n\t    this.rightStart = true;\n\t    symbol.leftEnd = true;\n\t    maxX = symbolLeft.x;\n\t  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\n\t    line = drawLine(this.chart, left, symbolRight, text);\n\t    this.leftStart = true;\n\t    symbol.rightEnd = true;\n\t    maxX = symbolRight.x;\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: right.x + lineLength/2, y: right.y},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: right.x + lineLength/2, y: right.y},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((!origin || origin === 'bottom') && isLeft) {\n\t    if (this.leftEnd && isUpper) {\n\t      line = drawLine(this.chart, bottom, [\n\t        {x: bottom.x, y: bottom.y + lineLength/2},\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y}\n\t      ], text);\n\t    } else {\n\t      line = drawLine(this.chart, bottom, [\n\t        {x: bottom.x, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y}\n\t      ], text);\n\t    }\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n\t  } else if ((!origin || origin === 'bottom') && isRight && isUnder) {\n\t    line = drawLine(this.chart, bottom, [\n\t      {x: bottom.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x;\n\t    if (symbolTop.x > maxX) maxX = symbolTop.x;\n\t  } else if ((!origin || origin === 'bottom') && isRight) {\n\t    line = drawLine(this.chart, bottom, [\n\t      {x: bottom.x, y: bottom.y + lineLength/2},\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n\t  } else if ((origin && origin === 'right') && isLeft) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: right.x + lineLength/2, y: right.y},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((origin && origin === 'right') && isRight) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: symbolTop.x, y: right.y},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\n\t    line = drawLine(this.chart, bottom, [\n\t      {x: bottom.x, y: bottom.y + lineLength/2},\n\t      {x: right.x + lineLength/2, y: bottom.y + lineLength/2},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x + lineLength/2;\n\t  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\n\t    var diffX = left.x - lineLength/2;\n\t    if (symbolLeft.x < left.x) {\n\t      diffX = symbolLeft.x - lineLength/2;\n\t    }\n\t    line = drawLine(this.chart, left, [\n\t      {x: diffX, y: left.y},\n\t      {x: diffX, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.leftStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = left.x;\n\t  } else if ((origin === 'left')) {\n\t    line = drawLine(this.chart, left, [\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/2, y: left.y},\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.leftStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = left.x;\n\t  } else if ((origin === 'top')) {\n\t    line = drawLine(this.chart, top, [\n\t      {x: top.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.topStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = top.x;\n\t  }\n\t\n\t  //update line style\n\t  if (this.lineStyle[symbol.key] && line){\n\t    line.attr(this.lineStyle[symbol.key]);\n\t  }\n\t\n\t  if (line) {\n\t    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\n\t      var otherLine = this.chart.lines[l];\n\t      var len;\n\t\n\t      var ePath = otherLine.attr('path'),\n\t          lPath = line.attr('path');\n\t\n\t      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\n\t        var newPath = [];\n\t        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\n\t        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\n\t\n\t        var line1_from_x = newPath[0][1];\n\t        var line1_from_y = newPath[0][2];\n\t        var line1_to_x = newPath[1][1];\n\t        var line1_to_y = newPath[1][2];\n\t\n\t        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\n\t          var newLinePath = [];\n\t          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\n\t          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\n\t\n\t          var line2_from_x = newLinePath[0][1];\n\t          var line2_from_y = newLinePath[0][2];\n\t          var line2_to_x = newLinePath[1][1];\n\t          var line2_to_y = newLinePath[1][2];\n\t\n\t          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\n\t          if (res.onLine1 && res.onLine2) {\n\t\n\t            var newSegment;\n\t            if (line2_from_y === line2_to_y) {\n\t              if (line2_from_x > line2_to_x) {\n\t                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              } else {\n\t                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              }\n\t            } else {\n\t              if (line2_from_y > line2_to_y) {\n\t                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              } else {\n\t                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              }\n\t            }\n\t\n\t            lP += 2;\n\t            len += 2;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    this.chart.lines.push(line);\n\t    if (this.chart.minXFromSymbols === undefined || this.chart.minXFromSymbols > left.x) {\n\t      this.chart.minXFromSymbols = left.x;\n\t    }\n\t  }\n\t\n\t  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\n\t    this.chart.maxXFromLine = maxX;\n\t  }\n\t};\n\t\n\tmodule.exports = Symbol;\n\n\n/***/ }),\n/* 3 */\n/*!************************************!*\\\n  !*** ./src/flowchart.functions.js ***!\n  \\************************************/\n/***/ (function(module, exports) {\n\n\tfunction drawPath(chart, location, points) {\n\t  var i, len;\n\t  var path = 'M{0},{1}';\n\t  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\n\t  }\n\t  var pathValues = [location.x, location.y];\n\t  for (i = 0, len = points.length; i < len; i++) {\n\t    pathValues.push(points[i].x);\n\t    pathValues.push(points[i].y);\n\t  }\n\t  var symbol = chart.paper.path(path, pathValues);\n\t  symbol.attr('stroke', chart.options['element-color']);\n\t  symbol.attr('stroke-width', chart.options['line-width']);\n\t\n\t  var font = chart.options.font;\n\t  var fontF = chart.options['font-family'];\n\t  var fontW = chart.options['font-weight'];\n\t\n\t  if (font) symbol.attr({ 'font': font });\n\t  if (fontF) symbol.attr({ 'font-family': fontF });\n\t  if (fontW) symbol.attr({ 'font-weight': fontW });\n\t\n\t  return symbol;\n\t}\n\t\n\tfunction drawLine(chart, from, to, text) {\n\t  var i, len;\n\t\n\t  if (Object.prototype.toString.call(to) !== '[object Array]') {\n\t    to = [to];\n\t  }\n\t\n\t  var path = 'M{0},{1}';\n\t  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\n\t  }\n\t  var pathValues = [from.x, from.y];\n\t  for (i = 0, len = to.length; i < len; i++) {\n\t    pathValues.push(to[i].x);\n\t    pathValues.push(to[i].y);\n\t  }\n\t\n\t  var line = chart.paper.path(path, pathValues);\n\t  line.attr({\n\t    stroke: chart.options['line-color'],\n\t    'stroke-width': chart.options['line-width'],\n\t    'arrow-end': chart.options['arrow-end']\n\t  });\n\t\n\t  var font = chart.options.font;\n\t  var fontF = chart.options['font-family'];\n\t  var fontW = chart.options['font-weight'];\n\t\n\t  if (font) line.attr({ 'font': font });\n\t  if (fontF) line.attr({ 'font-family': fontF });\n\t  if (fontW) line.attr({ 'font-weight': fontW });\n\t\n\t  if (text) {\n\t\n\t    var centerText = false;\n\t\n\t    var textPath = chart.paper.text(0, 0, text);\n\t\n\t    var isHorizontal = false;\n\t    var firstTo = to[0];\n\t\n\t    if (from.y === firstTo.y) {\n\t      isHorizontal = true;\n\t    }\n\t\n\t    var x = 0,\n\t        y = 0;\n\t\n\t    if (centerText) {\n\t      if (from.x > firstTo.x) {\n\t        x = from.x - (from.x - firstTo.x)/2;\n\t      } else {\n\t        x = firstTo.x - (firstTo.x - from.x)/2;\n\t      }\n\t\n\t      if (from.y > firstTo.y) {\n\t        y = from.y - (from.y - firstTo.y)/2;\n\t      } else {\n\t        y = firstTo.y - (firstTo.y - from.y)/2;\n\t      }\n\t\n\t      if (isHorizontal) {\n\t        x -= textPath.getBBox().width/2;\n\t        y -= chart.options['text-margin'];\n\t      } else {\n\t        x += chart.options['text-margin'];\n\t        y -= textPath.getBBox().height/2;\n\t      }\n\t    } else {\n\t      x = from.x;\n\t      y = from.y;\n\t\n\t      if (isHorizontal) {\n\t        x += chart.options['text-margin']/2;\n\t        y -= chart.options['text-margin'];\n\t      } else {\n\t        x += chart.options['text-margin']/2;\n\t        y += chart.options['text-margin'];\n\t        if (from.y > firstTo.y) {\n\t          y -= chart.options['text-margin']*2;\n\t        }\n\t      }\n\t    }\n\t\n\t    textPath.attr({\n\t      'text-anchor': 'start',\n\t      'font-size': chart.options['font-size'],\n\t      'fill': chart.options['font-color'],\n\t      x: x,\n\t      y: y\n\t    });\n\t\n\t    if (font) textPath.attr({ 'font': font });\n\t    if (fontF) textPath.attr({ 'font-family': fontF });\n\t    if (fontW) textPath.attr({ 'font-weight': fontW });\n\t  }\n\t\n\t  return line;\n\t}\n\t\n\tfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n\t  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n\t  var denominator, a, b, numerator1, numerator2, result = {\n\t    x: null,\n\t    y: null,\n\t    onLine1: false,\n\t    onLine2: false\n\t  };\n\t  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n\t  if (denominator === 0) {\n\t    return result;\n\t  }\n\t  a = line1StartY - line2StartY;\n\t  b = line1StartX - line2StartX;\n\t  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n\t  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n\t  a = numerator1 / denominator;\n\t  b = numerator2 / denominator;\n\t\n\t  // if we cast these lines infinitely in both directions, they intersect here:\n\t  result.x = line1StartX + (a * (line1EndX - line1StartX));\n\t  result.y = line1StartY + (a * (line1EndY - line1StartY));\n\t  /*\n\t  // it is worth noting that this should be the same as:\n\t  x = line2StartX + (b * (line2EndX - line2StartX));\n\t  y = line2StartX + (b * (line2EndY - line2StartY));\n\t  */\n\t  // if line1 is a segment and line2 is infinite, they intersect if:\n\t  if (a > 0 && a < 1) {\n\t    result.onLine1 = true;\n\t  }\n\t  // if line2 is a segment and line1 is infinite, they intersect if:\n\t  if (b > 0 && b < 1) {\n\t    result.onLine2 = true;\n\t  }\n\t  // if line1 and line2 are segments, they intersect if both of the above are true\n\t  return result;\n\t}\n\t\n\tmodule.exports = {\n\t\tdrawPath: drawPath,\n\t\tdrawLine: drawLine,\n\t\tcheckLineIntersection: checkLineIntersection\n\t};\n\n\n/***/ }),\n/* 4 */\n/*!********************************!*\\\n  !*** ./src/flowchart.parse.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar FlowChart = __webpack_require__(/*! ./flowchart.chart */ 7);\n\tvar Start = __webpack_require__(/*! ./flowchart.symbol.start */ 13);\n\tvar End = __webpack_require__(/*! ./flowchart.symbol.end */ 10);\n\tvar Operation = __webpack_require__(/*! ./flowchart.symbol.operation */ 12);\n\tvar InputOutput = __webpack_require__(/*! ./flowchart.symbol.inputoutput */ 11);\n\tvar Subroutine = __webpack_require__(/*! ./flowchart.symbol.subroutine */ 14);\n\tvar Condition = __webpack_require__(/*! ./flowchart.symbol.condition */ 5);\n\tvar Parallel = __webpack_require__(/*! ./flowchart.symbol.parallel */ 6);\n\t\n\tfunction parse(input) {\n\t  input = input || '';\n\t  input = input.trim();\n\t\n\t  var chart = {\n\t    symbols: {},\n\t    start: null,\n\t    drawSVG: function(container, options) {\n\t      var self = this;\n\t\n\t      if (this.diagram) {\n\t        this.diagram.clean();\n\t      }\n\t\n\t      var diagram = new FlowChart(container, options);\n\t      this.diagram = diagram;\n\t      var dispSymbols = {};\n\t\n\t      function getDisplaySymbol(s) {\n\t        if (dispSymbols[s.key]) {\n\t          return dispSymbols[s.key];\n\t        }\n\t\n\t        switch (s.symbolType) {\n\t          case 'start':\n\t            dispSymbols[s.key] = new Start(diagram, s);\n\t            break;\n\t          case 'end':\n\t            dispSymbols[s.key] = new End(diagram, s);\n\t            break;\n\t          case 'operation':\n\t            dispSymbols[s.key] = new Operation(diagram, s);\n\t            break;\n\t          case 'inputoutput':\n\t            dispSymbols[s.key] = new InputOutput(diagram, s);\n\t            break;\n\t          case 'subroutine':\n\t            dispSymbols[s.key] = new Subroutine(diagram, s);\n\t            break;\n\t          case 'condition':\n\t            dispSymbols[s.key] = new Condition(diagram, s);\n\t            break;\n\t          case 'parallel':\n\t            dispSymbols[s.key] = new Parallel(diagram, s);\n\t            break;\n\t          default:\n\t            return new Error('Wrong symbol type!');\n\t        }\n\t\n\t        return dispSymbols[s.key];\n\t      }\n\t\n\t      (function constructChart(s, prevDisp, prev) {\n\t        var dispSymb = getDisplaySymbol(s);\n\t\n\t        if (self.start === s) {\n\t          diagram.startWith(dispSymb);\n\t        } else if (prevDisp && prev && !prevDisp.pathOk) {\n\t          if (prevDisp instanceof(Condition)) {\n\t            if (prev.yes === s) {\n\t              prevDisp.yes(dispSymb);\n\t            }\n\t            if (prev.no === s) {\n\t              prevDisp.no(dispSymb);\n\t            }\n\t          } else if (prevDisp instanceof(Parallel)) {\n\t            if (prev.path1 === s) {\n\t              prevDisp.path1(dispSymb);\n\t            }\n\t            if (prev.path2 === s) {\n\t              prevDisp.path2(dispSymb);\n\t            }\n\t            if (prev.path3 === s) {\n\t              prevDisp.path3(dispSymb);\n\t            }\n\t          } else {\n\t            prevDisp.then(dispSymb);\n\t          }\n\t        }\n\t\n\t        if (dispSymb.pathOk) {\n\t          return dispSymb;\n\t        }\n\t\n\t        if (dispSymb instanceof(Condition)) {\n\t          if (s.yes) {\n\t            constructChart(s.yes, dispSymb, s);\n\t          }\n\t          if (s.no) {\n\t            constructChart(s.no, dispSymb, s);\n\t          }\n\t        } else if (dispSymb instanceof(Parallel)) {\n\t          if (s.path1) {\n\t            constructChart(s.path1, dispSymb, s);\n\t          }\n\t          if (s.path2) {\n\t            constructChart(s.path2, dispSymb, s);\n\t          }\n\t          if (s.path3) {\n\t            constructChart(s.path3, dispSymb, s);\n\t          }\n\t        } else if (s.next) {\n\t          constructChart(s.next, dispSymb, s);\n\t        }\n\t\n\t        return dispSymb;\n\t      })(this.start);\n\t\n\t      diagram.render();\n\t    },\n\t    clean: function() {\n\t      this.diagram.clean();\n\t    }\n\t  };\n\t\n\t  var lines = [];\n\t  var prevBreak = 0;\n\t  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\n\t    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\n\t      var line0 = input.substring(prevBreak, i0);\n\t      prevBreak = i0 + 1;\n\t      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\n\t    }\n\t  }\n\t\n\t  if (prevBreak < input.length) {\n\t    lines.push(input.substr(prevBreak));\n\t  }\n\t\n\t  for (var l = 1, len = lines.length; l < len;) {\n\t    var currentLine = lines[l];\n\t\n\t    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0 && currentLine.indexOf('@>') < 0) {\n\t      lines[l - 1] += '\\n' + currentLine;\n\t      lines.splice(l, 1);\n\t      len--;\n\t    } else {\n\t      l++;\n\t    }\n\t  }\n\t\n\t  function getStyle(s){\n\t    var startIndex = s.indexOf('(') + 1;\n\t    var endIndex = s.indexOf(')');\n\t    if (startIndex >= 0 && endIndex >= 0) {\n\t      return s.substring(startIndex,endIndex);\n\t    }\n\t    return '{}';\n\t  }\n\t\n\t  function getSymbValue(s){\n\t    var startIndex = s.indexOf('(') + 1;\n\t    var endIndex = s.indexOf(')');\n\t    if (startIndex >= 0 && endIndex >= 0) {\n\t      return s.substring(startIndex,endIndex);\n\t    }\n\t    return '';\n\t  }\n\t\n\t  function getSymbol(s) {\n\t    var startIndex = s.indexOf('(') + 1;\n\t    var endIndex = s.indexOf(')');\n\t    if (startIndex >= 0 && endIndex >= 0) {\n\t      return chart.symbols[s.substring(0, startIndex - 1)];\n\t    }\n\t    return chart.symbols[s];\n\t  }\n\t\n\t  function getNextPath(s) {\n\t    var next = 'next';\n\t    var startIndex = s.indexOf('(') + 1;\n\t    var endIndex = s.indexOf(')');\n\t    if (startIndex >= 0 && endIndex >= 0) {\n\t      next = flowSymb.substring(startIndex, endIndex);\n\t      if (next.indexOf(',') < 0) {\n\t        if (next !== 'yes' && next !== 'no') {\n\t          next = 'next, ' + next;\n\t        }\n\t      }\n\t    }\n\t    return next;\n\t  }\n\t\n\t  while (lines.length > 0) {\n\t    var line = lines.splice(0, 1)[0].trim();\n\t\n\t    if (line.indexOf('=>') >= 0) {\n\t      // definition\n\t      var parts = line.split('=>');\n\t      var symbol = {\n\t        key: parts[0].replace(/\\(.*\\)/, ''),\n\t        symbolType: parts[1],\n\t        text: null,\n\t        link: null,\n\t        target: null,\n\t        flowstate: null,\n\t        function: null,\n\t        lineStyle: {},\n\t        params: {}\n\t      };\n\t\n\t      //parse parameters\n\t      var params = parts[0].match(/\\((.*)\\)/);\n\t      if (params && params.length > 1){\n\t        var entries = params[1].split(',');\n\t        for(var i = 0; i < entries.length; i++) {\n\t          var entry = entries[0].split('=');\n\t          if (entry.length == 2) {\n\t            symbol.params[entry[0]] = entry[1];\n\t          }\n\t        }\n\t      }\n\t\n\t      var sub;\n\t\n\t      if (symbol.symbolType.indexOf(': ') >= 0) {\n\t        sub = symbol.symbolType.split(': ');\n\t        symbol.symbolType = sub.shift();\n\t        symbol.text = sub.join(': ');\n\t      }\n\t\n\t      if (symbol.text && symbol.text.indexOf(':$') >= 0) {\n\t        sub = symbol.text.split(':$');\n\t        symbol.text = sub.shift();\n\t        symbol.function = sub.join(':$');\n\t      } else if (symbol.symbolType.indexOf(':$') >= 0) {\n\t        sub = symbol.symbolType.split(':$');\n\t        symbol.symbolType = sub.shift();\n\t        symbol.function = sub.join(':$');\n\t      } else if (symbol.text && symbol.text.indexOf(':>') >= 0) {\n\t        sub = symbol.text.split(':>');\n\t        symbol.text = sub.shift();\n\t        symbol.link = sub.join(':>');\n\t      } else if (symbol.symbolType.indexOf(':>') >= 0) {\n\t        sub = symbol.symbolType.split(':>');\n\t        symbol.symbolType = sub.shift();\n\t        symbol.link = sub.join(':>');\n\t      }\n\t\n\t      if (symbol.symbolType.indexOf('\\n') >= 0) {\n\t        symbol.symbolType = symbol.symbolType.split('\\n')[0];\n\t      }\n\t\n\t      /* adding support for links */\n\t      if (symbol.link) {\n\t        var startIndex = symbol.link.indexOf('[') + 1;\n\t        var endIndex = symbol.link.indexOf(']');\n\t        if (startIndex >= 0 && endIndex >= 0) {\n\t          symbol.target = symbol.link.substring(startIndex, endIndex);\n\t          symbol.link = symbol.link.substring(0, startIndex - 1);\n\t        }\n\t      }\n\t      /* end of link support */\n\t\n\t      /* adding support for flowstates */\n\t      if (symbol.text) {\n\t        if (symbol.text.indexOf('|') >= 0) {\n\t          var txtAndState = symbol.text.split('|');\n\t          symbol.flowstate = txtAndState.pop().trim();\n\t          symbol.text = txtAndState.join('|');\n\t        }\n\t      }\n\t      /* end of flowstate support */\n\t\n\t      chart.symbols[symbol.key] = symbol;\n\t\n\t    } else if (line.indexOf('->') >= 0) {\n\t      // flow\n\t      var flowSymbols = line.split('->');\n\t      for (var i = 0, lenS = flowSymbols.length; i < lenS; i++) {\n\t        var flowSymb = flowSymbols[i];\n\t        var symbVal = getSymbValue(flowSymb);\n\t\n\t        if (symbVal === 'true' || symbVal === 'false') {\n\t          // map true or false to yes or no respectively\n\t          flowSymb = flowSymb.replace('true', 'yes');\n\t          flowSymb = flowSymb.replace('false', 'no');\n\t        }\n\t\n\t        var realSymb = getSymbol(flowSymb);\n\t        var next = getNextPath(flowSymb);\n\t\n\t        var direction = null;\n\t        if (next.indexOf(',') >= 0) {\n\t          var condOpt = next.split(',');\n\t          next = condOpt[0];\n\t          direction = condOpt[1].trim();\n\t        }\n\t\n\t        if (!chart.start) {\n\t          chart.start = realSymb;\n\t        }\n\t\n\t        if (i + 1 < lenS) {\n\t          var nextSymb = flowSymbols[i + 1];\n\t          realSymb[next] = getSymbol(nextSymb);\n\t          realSymb['direction_' + next] = direction;\n\t          direction = null;\n\t        }\n\t      }\n\t    } else if (line.indexOf('@>') >= 0) {\n\t\n\t      // line style\n\t      var lineStyleSymbols = line.split('@>');\n\t      for (var i = 0, lenS = lineStyleSymbols.length; i < lenS; i++) {\n\t        if ((i + 1) != lenS) {\n\t          var curSymb = getSymbol(lineStyleSymbols[i]);\n\t          var nextSymb = getSymbol(lineStyleSymbols[i+1]);\n\t\n\t          curSymb['lineStyle'][nextSymb.key] = JSON.parse(getStyle(lineStyleSymbols[i + 1]));\n\t        }\n\t      }\n\t    }\n\t\n\t  }\n\t  return chart;\n\t}\n\t\n\tmodule.exports = parse;\n\n/***/ }),\n/* 5 */\n/*!*******************************************!*\\\n  !*** ./src/flowchart.symbol.condition.js ***!\n  \\*******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\n\tvar drawPath = drawAPI.drawPath;\n\t\n\tfunction Condition(chart, options) {\n\t  options = options || {};\n\t  Symbol.call(this, chart, options);\n\t  this.textMargin = this.getAttr('text-margin');\n\t  this.yes_direction = 'bottom';\n\t  this.no_direction = 'right';\n\t  this.params = options.params;\n\t  if (options.yes && options.direction_yes && options.no && !options.direction_no) {\n\t    if (options.direction_yes === 'right') {\n\t      this.no_direction = 'bottom';\n\t      this.yes_direction = 'right';\n\t    } else if (options.direction_yes === 'top') {\n\t      this.no_direction = 'right';\n\t      this.yes_direction = 'top';\n\t    } else {\n\t      this.no_direction = 'right';\n\t      this.yes_direction = 'bottom';\n\t    }\n\t  } else if (options.yes && !options.direction_yes && options.no && options.direction_no) {\n\t    if (options.direction_no === 'right') {\n\t      this.yes_direction = 'bottom';\n\t      this.no_direction = 'right';\n\t    } else {\n\t      this.yes_direction = 'right';\n\t      this.no_direction = 'bottom';\n\t    }\n\t  } else if (options.yes && options.direction_yes && options.no && options.direction_no && options.direction_no !== options.direction_yes) {\n\t    if (options.direction_yes === 'right') {\n\t      this.no_direction = 'bottom';\n\t      this.yes_direction = 'right';\n\t    } else if (options.direction_yes === 'top') {\n\t      this.no_direction = 'right';\n\t      this.yes_direction = 'top';\n\t    } else {\n\t      this.no_direction = 'right';\n\t      this.yes_direction = 'bottom';\n\t    }\n\t  } else {\n\t    this.yes_direction = 'bottom';\n\t    this.no_direction = 'right';\n\t  }\n\t\n\t  this.yes_direction = this.yes_direction || 'bottom';\n\t  this.no_direction = this.no_direction || 'right';\n\t\n\t  this.text.attr({\n\t    x: this.textMargin * 2\n\t  });\n\t\n\t  var width = this.text.getBBox().width + 3 * this.textMargin;\n\t  width += width/2;\n\t  var height = this.text.getBBox().height + 2 * this.textMargin;\n\t  height += height/2;\n\t  height = Math.max(width * 0.5, height);\n\t  var startX = width/4;\n\t  var startY = height/4;\n\t\n\t  this.text.attr({\n\t    x: startX + this.textMargin/2\n\t  });\n\t\n\t  var start = {x: startX, y: startY};\n\t  var points = [\n\t    {x: startX - width/4, y: startY + height/4},\n\t    {x: startX - width/4 + width/2, y: startY + height/4 + height/2},\n\t    {x: startX - width/4 + width, y: startY + height/4},\n\t    {x: startX - width/4 + width/2, y: startY + height/4 - height/2},\n\t    {x: startX - width/4, y: startY + height/4}\n\t  ];\n\t\n\t  var symbol = drawPath(chart, start, points);\n\t\n\t  symbol.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t  if (options.link) { symbol.attr('href', options.link); }\n\t  if (options.target) { symbol.attr('target', options.target); }\n\t  if (options.key) { symbol.node.id = options.key; }\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\n\t\n\t  this.text.attr({\n\t    y: symbol.getBBox().height/2\n\t  });\n\t\n\t  this.group.push(symbol);\n\t  symbol.insertBefore(this.text);\n\t\n\t  this.initialize();\n\t}\n\tinherits(Condition, Symbol);\n\t\n\tCondition.prototype.render = function() {\n\t\n\t  if (this.yes_direction) {\n\t    this[this.yes_direction + '_symbol'] = this.yes_symbol;\n\t  }\n\t\n\t  if (this.no_direction) {\n\t    this[this.no_direction + '_symbol'] = this.no_symbol;\n\t  }\n\t\n\t  var lineLength = this.getAttr('line-length');\n\t\n\t  if (this.bottom_symbol) {\n\t    var bottomPoint = this.getBottom();\n\t\n\t    if (!this.bottom_symbol.isPositioned) {\n\t      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\n\t      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\n\t      this.bottom_symbol.isPositioned = true;\n\t\n\t      this.bottom_symbol.render();\n\t    }\n\t  }\n\t\n\t  if (this.right_symbol) {\n\t    var rightPoint = this.getRight();\n\t\n\t    if (!this.right_symbol.isPositioned) {\n\t\n\t      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\n\t      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\n\t\n\t      var self = this;\n\t      (function shift() {\n\t        var hasSymbolUnder = false;\n\t        var symb;\n\t        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n\t          symb = self.chart.symbols[i];\n\t\n\t          if (!self.params['align-next'] || self.params['align-next'] !== 'no') { \n\t            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\n\t            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\n\t              hasSymbolUnder = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        if (hasSymbolUnder) {\n\t          if (self.right_symbol.symbolType === 'end') return;\n\t          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\n\t          shift();\n\t        }\n\t      })();\n\t\n\t      this.right_symbol.isPositioned = true;\n\t\n\t      this.right_symbol.render();\n\t    }\n\t  }\n\t};\n\t\n\tCondition.prototype.renderLines = function() {\n\t  if (this.yes_symbol) {\n\t    this.drawLineTo(this.yes_symbol, this.getAttr('yes-text'), this.yes_direction);\n\t  }\n\t\n\t  if (this.no_symbol) {\n\t    this.drawLineTo(this.no_symbol, this.getAttr('no-text'), this.no_direction);\n\t  }\n\t};\n\t\n\tmodule.exports = Condition;\n\n\n/***/ }),\n/* 6 */\n/*!******************************************!*\\\n  !*** ./src/flowchart.symbol.parallel.js ***!\n  \\******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\t\n\tfunction Parallel(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\n\t  options = options || {};\n\t  Symbol.call(this, chart, options, symbol);\n\t  this.textMargin = this.getAttr('text-margin');\n\t  this.path1_direction = 'bottom';\n\t  this.path2_direction = 'right';\n\t  this.path3_direction = 'top';\n\t  this.params = options.params;\n\t  if (options.direction_next === 'path1' && !options[options.direction_next] && options.next) {\n\t    options[options.direction_next] = options.next;\n\t  }\n\t  if (options.direction_next === 'path2' && !options[options.direction_next] && options.next) {\n\t    options[options.direction_next] = options.next;\n\t  }\n\t  if (options.direction_next === 'path3' && !options[options.direction_next] && options.next) {\n\t    options[options.direction_next] = options.next;\n\t  }\n\t\n\t  if (options.path1 && options.direction_path1 && options.path2 && !options.direction_path2 && options.path3 && !options.direction_path3) {\n\t    if (options.direction_path1 === 'right') {\n\t      this.path2_direction = 'bottom';\n\t      this.path1_direction = 'right';\n\t      this.path3_direction = 'top';\n\t    } else if (options.direction_path1 === 'top') {\n\t      this.path2_direction = 'right';\n\t      this.path1_direction = 'top';\n\t      this.path3_direction = 'bottom';\n\t    } else if (options.direction_path1 === 'left') {\n\t      this.path2_direction = 'right';\n\t      this.path1_direction = 'left';\n\t      this.path3_direction = 'bottom';\n\t    } else {\n\t      this.path2_direction = 'right';\n\t      this.path1_direction = 'bottom';\n\t      this.path3_direction = 'top';\n\t    }\n\t  } else if (options.path1 && !options.direction_path1 && options.path2 && options.direction_path2 && options.path3 && !options.direction_path3) {\n\t    if (options.direction_path2 === 'right') {\n\t      this.path1_direction = 'bottom';\n\t      this.path2_direction = 'right';\n\t      this.path3_direction = 'top';\n\t    } else if (options.direction_path2 === 'left') {\n\t      this.path1_direction = 'bottom';\n\t      this.path2_direction = 'left';\n\t      this.path3_direction = 'right';\n\t    } else {\n\t      this.path1_direction = 'right';\n\t      this.path2_direction = 'bottom';\n\t      this.path3_direction = 'top';\n\t    }\n\t  } else if (options.path1 && !options.direction_path1 && options.path2 && !options.direction_path2 && options.path3 && options.direction_path3) {\n\t    if (options.direction_path2 === 'right') {\n\t      this.path1_direction = 'bottom';\n\t      this.path2_direction = 'top';\n\t      this.path3_direction = 'right';\n\t    } else if (options.direction_path2 === 'left') {\n\t      this.path1_direction = 'bottom';\n\t      this.path2_direction = 'right';\n\t      this.path3_direction = 'left';\n\t    } else {\n\t      this.path1_direction = 'right';\n\t      this.path2_direction = 'bottom';\n\t      this.path3_direction = 'top';\n\t    }\n\t  } else {\n\t    this.path1_direction = options.direction_path1;\n\t    this.path2_direction = options.direction_path2;\n\t    this.path3_direction = options.direction_path3;\n\t  }\n\t\n\t  this.path1_direction = this.path1_direction || 'bottom';\n\t  this.path2_direction = this.path2_direction || 'right';\n\t  this.path3_direction = this.path3_direction || 'top';\n\t\n\t  this.initialize();\n\t}\n\tinherits(Parallel, Symbol);\n\t\n\tParallel.prototype.render = function() {\n\t\n\t  if (this.path1_direction) {\n\t    this[this.path1_direction + '_symbol'] = this.path1_symbol;\n\t  }\n\t\n\t  if (this.path2_direction) {\n\t    this[this.path2_direction + '_symbol'] = this.path2_symbol;\n\t  }\n\t\n\t  if (this.path3_direction) {\n\t    this[this.path3_direction + '_symbol'] = this.path3_symbol;\n\t  }\n\t\n\t  var lineLength = this.getAttr('line-length');\n\t\n\t  if (this.bottom_symbol) {\n\t    var bottomPoint = this.getBottom();\n\t\n\t    if (!this.bottom_symbol.isPositioned) {\n\t      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\n\t      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width / 2);\n\t      this.bottom_symbol.isPositioned = true;\n\t\n\t      this.bottom_symbol.render();\n\t    }\n\t  }\n\t\n\t  if (this.top_symbol) {\n\t    var topPoint = this.getTop();\n\t\n\t    if (!this.top_symbol.isPositioned) {\n\t      this.top_symbol.shiftY(this.getY() - this.top_symbol.height - lineLength);\n\t      this.top_symbol.setX(topPoint.x + this.top_symbol.width);\n\t      this.top_symbol.isPositioned = true;\n\t\n\t      this.top_symbol.render();\n\t    }\n\t  }\n\t\n\t  var self = this;\n\t\n\t  if (this.left_symbol) {\n\t    var leftPoint = this.getLeft();\n\t\n\t    if (!this.left_symbol.isPositioned) {\n\t      this.left_symbol.setY(leftPoint.y - this.left_symbol.height / 2);\n\t      this.left_symbol.shiftX(-(this.group.getBBox().x + this.width + lineLength));\n\t      (function shift() {\n\t        var hasSymbolUnder = false;\n\t        var symb;\n\t        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n\t          symb = self.chart.symbols[i];\n\t\n\t          if (!self.params['align-next'] || self.params['align-next'] !== 'no') {\n\t            var diff = Math.abs(symb.getCenter().x - self.left_symbol.getCenter().x);\n\t            if (symb.getCenter().y > self.left_symbol.getCenter().y && diff <= self.left_symbol.width / 2) {\n\t              hasSymbolUnder = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        if (hasSymbolUnder) {\n\t          if (self.left_symbol.symbolType === 'end') return;\n\t          self.left_symbol.setX(symb.getX() + symb.width + lineLength);\n\t          shift();\n\t        }\n\t      })();\n\t\n\t      this.left_symbol.isPositioned = true;\n\t\n\t      this.left_symbol.render();\n\t    }\n\t  }\n\t\n\t  if (this.right_symbol) {\n\t    var rightPoint = this.getRight();\n\t\n\t    if (!this.right_symbol.isPositioned) {\n\t      this.right_symbol.setY(rightPoint.y - this.right_symbol.height / 2);\n\t      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\n\t      (function shift() {\n\t        var hasSymbolUnder = false;\n\t        var symb;\n\t        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n\t          symb = self.chart.symbols[i];\n\t\n\t          if (!self.params['align-next'] || self.params['align-next'] !== 'no') {\n\t            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\n\t            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width / 2) {\n\t              hasSymbolUnder = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        if (hasSymbolUnder) {\n\t          if (self.right_symbol.symbolType === 'end') return;\n\t          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\n\t          shift();\n\t        }\n\t      })();\n\t\n\t      this.right_symbol.isPositioned = true;\n\t\n\t      this.right_symbol.render();\n\t    }\n\t  }\n\t};\n\t\n\tParallel.prototype.renderLines = function() {\n\t  if (this.path1_symbol) {\n\t    this.drawLineTo(this.path1_symbol, '', this.path1_direction);\n\t  }\n\t\n\t  if (this.path2_symbol) {\n\t    this.drawLineTo(this.path2_symbol, '', this.path2_direction);\n\t  }\n\t\n\t  if (this.path3_symbol) {\n\t    this.drawLineTo(this.path3_symbol, '', this.path3_direction);\n\t  }\n\t};\n\t\n\tmodule.exports = Parallel;\n\n/***/ }),\n/* 7 */\n/*!********************************!*\\\n  !*** ./src/flowchart.chart.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Raphael = __webpack_require__(/*! raphael */ 16);\n\tvar defaults = __webpack_require__(/*! ./flowchart.helpers */ 1).defaults;\n\tvar defaultOptions = __webpack_require__(/*! ./flowchart.defaults */ 8);\n\tvar Condition = __webpack_require__(/*! ./flowchart.symbol.condition */ 5);\n\tvar Parallel = __webpack_require__(/*! ./flowchart.symbol.parallel */ 6);\n\t\n\tfunction FlowChart(container, options) {\n\t  options = options || {};\n\t\n\t  this.paper = new Raphael(container);\n\t\n\t  this.options = defaults(options, defaultOptions);\n\t\n\t  this.symbols = [];\n\t  this.lines = [];\n\t  this.start = null;\n\t}\n\t\n\tFlowChart.prototype.handle = function(symbol) {\n\t  if (this.symbols.indexOf(symbol) <= -1) {\n\t    this.symbols.push(symbol);\n\t  }\n\t\n\t  var flowChart = this;\n\t\n\t  if (symbol instanceof(Condition)) {\n\t    symbol.yes = function(nextSymbol) {\n\t      symbol.yes_symbol = nextSymbol;\n\t      if(symbol.no_symbol) {\n\t        symbol.pathOk = true;\n\t      }\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t    symbol.no = function(nextSymbol) {\n\t      symbol.no_symbol = nextSymbol;\n\t      if (symbol.yes_symbol) {\n\t        symbol.pathOk = true;\n\t      }\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t  } else if (symbol instanceof(Parallel)) {\n\t    symbol.path1 = function(nextSymbol) {\n\t      symbol.path1_symbol = nextSymbol;\n\t      if (symbol.path2_symbol) {\n\t        symbol.pathOk = true;\n\t      }\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t    symbol.path2 = function(nextSymbol) {\n\t      symbol.path2_symbol = nextSymbol;\n\t      if (symbol.path3_symbol) {\n\t        symbol.pathOk = true;\n\t      }\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t    symbol.path3 = function(nextSymbol) {\n\t      symbol.path3_symbol = nextSymbol;\n\t      if (symbol.path1_symbol) {\n\t        symbol.pathOk = true;\n\t      }\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t  } else {\n\t    symbol.then = function(nextSymbol) {\n\t      symbol.next = nextSymbol;\n\t      symbol.pathOk = true;\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t  }\n\t\n\t  return symbol;\n\t};\n\t\n\tFlowChart.prototype.startWith = function(symbol) {\n\t  this.start = symbol;\n\t  return this.handle(symbol);\n\t};\n\t\n\tFlowChart.prototype.render = function() {\n\t  var maxWidth = 0,\n\t    maxHeight = 0,\n\t    i = 0,\n\t    len = 0,\n\t    maxX = 0,\n\t    maxY = 0,\n\t    minX = 0,\n\t    minY = 0,\n\t    symbol,\n\t    line;\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    if (symbol.width > maxWidth) {\n\t      maxWidth = symbol.width;\n\t    }\n\t    if (symbol.height > maxHeight) {\n\t      maxHeight = symbol.height;\n\t    }\n\t  }\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\n\t    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\n\t  }\n\t\n\t  this.start.render();\n\t  // for (i = 0, len = this.symbols.length; i < len; i++) {\n\t  //   symbol = this.symbols[i];\n\t  //   symbol.render();\n\t  // }\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    symbol.renderLines();\n\t  }\n\t\n\t  maxX = this.maxXFromLine;\n\t\n\t  var x;\n\t  var y;\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    x = symbol.getX() + symbol.width;\n\t    y = symbol.getY() + symbol.height;\n\t    if (x > maxX) {\n\t      maxX = x;\n\t    }\n\t    if (y > maxY) {\n\t      maxY = y;\n\t    }\n\t  }\n\t\n\t  for (i = 0, len = this.lines.length; i < len; i++) {\n\t    line = this.lines[i].getBBox();\n\t    x = line.x;\n\t    y = line.y;\n\t    var x2 = line.x2;\n\t    var y2 = line.y2;\n\t    if (x < minX) {\n\t      minX = x;\n\t    }\n\t    if (y < minY) {\n\t      minY = y;\n\t    }\n\t    if (x2 > maxX) {\n\t      maxX = x2;\n\t    }\n\t    if (y2 > maxY) {\n\t      maxY = y2;\n\t    }\n\t  }\n\t\n\t  var scale = this.options['scale'];\n\t  var lineWidth = this.options['line-width'];\n\t\n\t  if (this.minXFromSymbols < minX) minX = this.minXFromSymbols;\n\t\n\t  if (minX < 0) minX -= lineWidth;\n\t  if (minY < 0) minY -= lineWidth;\n\t\n\t  var width = maxX + lineWidth - minX;\n\t  var height = maxY + lineWidth - minY;\n\t\n\t  this.paper.setSize(width * scale, height * scale);\n\t  this.paper.setViewBox(minX, minY, width, height, true);\n\t};\n\t\n\tFlowChart.prototype.clean = function() {\n\t  if (this.paper) {\n\t    var paperDom = this.paper.canvas;\n\t    paperDom.parentNode.removeChild(paperDom);\n\t  }\n\t};\n\t\n\tmodule.exports = FlowChart;\n\n/***/ }),\n/* 8 */\n/*!***********************************!*\\\n  !*** ./src/flowchart.defaults.js ***!\n  \\***********************************/\n/***/ (function(module, exports) {\n\n\t// defaults\n\tmodule.exports = {\n\t  'x': 0,\n\t  'y': 0,\n\t  'line-width': 3,\n\t  'line-length': 50,\n\t  'text-margin': 10,\n\t  'font-size': 14,\n\t  'font-color': 'black',\n\t  // 'font': 'normal',\n\t  // 'font-family': 'calibri',\n\t  // 'font-weight': 'normal',\n\t  'line-color': 'black',\n\t  'element-color': 'black',\n\t  'fill': 'white',\n\t  'yes-text': 'yes',\n\t  'no-text': 'no',\n\t  'arrow-end': 'block',\n\t  'class': 'flowchart',\n\t  'scale': 1,\n\t  'symbols': {\n\t    'start': {},\n\t    'end': {},\n\t    'condition': {},\n\t    'inputoutput': {},\n\t    'operation': {},\n\t    'subroutine': {},\n\t    'parallel': {}\n\t  } //,\n\t  // 'flowstate' : {\n\t  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\n\t  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\n\t  //   'future' : { 'fill': '#FFFF99'},\n\t  //   'invalid': {'fill': '#444444'}\n\t  // }\n\t};\n\n/***/ }),\n/* 9 */\n/*!*******************************!*\\\n  !*** ./src/flowchart.shim.js ***!\n  \\*******************************/\n/***/ (function(module, exports) {\n\n\t// add indexOf to non ECMA-262 standard compliant browsers\n\tif (!Array.prototype.indexOf) {\n\t  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n\t    \"use strict\";\n\t    if (this === null) {\n\t      throw new TypeError();\n\t    }\n\t    var t = Object(this);\n\t    var len = t.length >>> 0;\n\t    if (len === 0) {\n\t      return -1;\n\t    }\n\t    var n = 0;\n\t    if (arguments.length > 0) {\n\t      n = Number(arguments[1]);\n\t      if (n != n) { // shortcut for verifying if it's NaN\n\t        n = 0;\n\t      } else if (n !== 0 && n != Infinity && n != -Infinity) {\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t      }\n\t    }\n\t    if (n >= len) {\n\t      return -1;\n\t    }\n\t    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n\t    for (; k < len; k++) {\n\t      if (k in t && t[k] === searchElement) {\n\t        return k;\n\t      }\n\t    }\n\t    return -1;\n\t  };\n\t}\n\t\n\t// add lastIndexOf to non ECMA-262 standard compliant browsers\n\tif (!Array.prototype.lastIndexOf) {\n\t  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\n\t    \"use strict\";\n\t    if (this === null) {\n\t      throw new TypeError();\n\t    }\n\t    var t = Object(this);\n\t    var len = t.length >>> 0;\n\t    if (len === 0) {\n\t      return -1;\n\t    }\n\t    var n = len;\n\t    if (arguments.length > 1) {\n\t      n = Number(arguments[1]);\n\t      if (n != n) {\n\t        n = 0;\n\t      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t      }\n\t    }\n\t    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\n\t    for (; k >= 0; k--) {\n\t      if (k in t && t[k] === searchElement) {\n\t        return k;\n\t      }\n\t    }\n\t    return -1;\n\t  };\n\t}\n\t\n\tif (!String.prototype.trim) {\n\t  String.prototype.trim = function() {\n\t    return this.replace(/^\\s+|\\s+$/g, '');\n\t  };\n\t}\n\n/***/ }),\n/* 10 */\n/*!*************************************!*\\\n  !*** ./src/flowchart.symbol.end.js ***!\n  \\*************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\t\n\tfunction End(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n\t  options = options || {};\n\t  options.text = options.text || 'End';\n\t  Symbol.call(this, chart, options, symbol);\n\t}\n\tinherits(End, Symbol);\n\t\n\tmodule.exports = End;\n\n\n/***/ }),\n/* 11 */\n/*!*********************************************!*\\\n  !*** ./src/flowchart.symbol.inputoutput.js ***!\n  \\*********************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\n\tvar drawPath = drawAPI.drawPath;\n\t\n\tfunction InputOutput(chart, options) {\n\t  options = options || {};\n\t  Symbol.call(this, chart, options);\n\t  this.textMargin = this.getAttr('text-margin');\n\t\n\t  this.text.attr({\n\t    x: this.textMargin * 3\n\t  });\n\t\n\t  var width = this.text.getBBox().width + 4 * this.textMargin;\n\t  var height = this.text.getBBox().height + 2 * this.textMargin;\n\t  var startX = this.textMargin;\n\t  var startY = height/2;\n\t\n\t  var start = {x: startX, y: startY};\n\t  var points = [\n\t    {x: startX - this.textMargin, y: height},\n\t    {x: startX - this.textMargin + width, y: height},\n\t    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\n\t    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\n\t    {x: startX, y: startY}\n\t  ];\n\t\n\t  var symbol = drawPath(chart, start, points);\n\t\n\t  symbol.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t  if (options.link) { symbol.attr('href', options.link); }\n\t  if (options.target) { symbol.attr('target', options.target); }\n\t  if (options.key) { symbol.node.id = options.key; }\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\n\t\n\t  this.text.attr({\n\t    y: symbol.getBBox().height/2\n\t  });\n\t\n\t  this.group.push(symbol);\n\t  symbol.insertBefore(this.text);\n\t\n\t  this.initialize();\n\t}\n\tinherits(InputOutput, Symbol);\n\t\n\tInputOutput.prototype.getLeft = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX() + this.textMargin;\n\t  return {x: x, y: y};\n\t};\n\t\n\tInputOutput.prototype.getRight = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX() + this.group.getBBox().width - this.textMargin;\n\t  return {x: x, y: y};\n\t};\n\t\n\tmodule.exports = InputOutput;\n\n\n/***/ }),\n/* 12 */\n/*!*******************************************!*\\\n  !*** ./src/flowchart.symbol.operation.js ***!\n  \\*******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\t\n\tfunction Operation(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\n\t  options = options || {};\n\t  Symbol.call(this, chart, options, symbol);\n\t}\n\tinherits(Operation, Symbol);\n\t\n\tmodule.exports = Operation;\n\n\n/***/ }),\n/* 13 */\n/*!***************************************!*\\\n  !*** ./src/flowchart.symbol.start.js ***!\n  \\***************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\t\n\tfunction Start(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n\t  options = options || {};\n\t  options.text = options.text || 'Start';\n\t  Symbol.call(this, chart, options, symbol);\n\t}\n\tinherits(Start, Symbol);\n\t\n\tmodule.exports = Start;\n\t\n\t// Start.prototype.render = function() {\n\t//   if (this.next) {\n\t//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\n\t\n\t//     var bottomPoint = this.getBottom();\n\t//     var topPoint = this.next.getTop();\n\t\n\t//     if (!this.next.isPositioned) {\n\t//       this.next.shiftY(this.getY() + this.height + lineLength);\n\t//       this.next.setX(bottomPoint.x - this.next.width/2);\n\t//       this.next.isPositioned = true;\n\t\n\t//       this.next.render();\n\t//     }\n\t//   }\n\t// };\n\t\n\t// Start.prototype.renderLines = function() {\n\t//   if (this.next) {\n\t//     this.drawLineTo(this.next);\n\t//   }\n\t// };\n\n\n/***/ }),\n/* 14 */\n/*!********************************************!*\\\n  !*** ./src/flowchart.symbol.subroutine.js ***!\n  \\********************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\t\n\tfunction Subroutine(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\n\t  options = options || {};\n\t  Symbol.call(this, chart, options, symbol);\n\t\n\t  symbol.attr({\n\t    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\n\t  });\n\t\n\t  this.text.attr({\n\t    'x': 2 * this.getAttr('text-margin')\n\t  });\n\t\n\t  var innerWrap = chart.paper.rect(0, 0, 0, 0);\n\t  innerWrap.attr({\n\t    x: this.getAttr('text-margin'),\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\n\t    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t  if (options.key) { innerWrap.node.id = options.key + 'i'; }\n\t\n\t  var font = this.getAttr('font');\n\t  var fontF = this.getAttr('font-family');\n\t  var fontW = this.getAttr('font-weight');\n\t\n\t  if (font) innerWrap.attr({ 'font': font });\n\t  if (fontF) innerWrap.attr({ 'font-family': fontF });\n\t  if (fontW) innerWrap.attr({ 'font-weight': fontW });\n\t\n\t  if (options.link) { innerWrap.attr('href', options.link); }\n\t  if (options.target) { innerWrap.attr('target', options.target); }\n\t  this.group.push(innerWrap);\n\t  innerWrap.insertBefore(this.text);\n\t\n\t  this.initialize();\n\t}\n\tinherits(Subroutine, Symbol);\n\t\n\tmodule.exports = Subroutine;\n\n\n/***/ }),\n/* 15 */\n/*!******************************!*\\\n  !*** ./src/jquery-plugin.js ***!\n  \\******************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tif (typeof jQuery != 'undefined') {\n\t\tvar parse = __webpack_require__(/*! ./flowchart.parse */ 4);\n\t\t(function( $ ) {\n\t\t\t$.fn.flowChart = function( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\tvar chart = parse($this.text());\n\t\t\t\t\t$this.html('');\n\t\t\t\t\tchart.drawSVG(this, options);\n\t\t\t\t});\n\t\t\t};\n\t\t})(jQuery); // eslint-disable-line\n\t}\n\n\n/***/ }),\n/* 16 */\n/*!**************************!*\\\n  !*** external \"Raphael\" ***!\n  \\**************************/\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// flowchart.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6e793fc3ff9a4cf3cefa","require('./src/flowchart.shim');\nvar parse = require('./src/flowchart.parse');\nrequire('./src/jquery-plugin');\n\nvar FlowChart = {\n\tparse: parse\n};\n\nif (typeof window !== 'undefined') {\n\twindow.flowchart = FlowChart;\n}\n\nmodule.exports = FlowChart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 0\n// module chunks = 0","function _defaults(options, defaultOptions) {\n  if (!options || typeof options === 'function') {\n    return defaultOptions;\n  }\n\n  var merged = {};\n  for (var attrname in defaultOptions) {\n    merged[attrname] = defaultOptions[attrname];\n  }\n\n  for (attrname in options) {\n    if (options[attrname]) {\n      if (typeof merged[attrname] === 'object') {\n        merged[attrname] = _defaults(merged[attrname], options[attrname]);\n      } else {\n        merged[attrname] = options[attrname];\n      }\n    }\n  }\n  return merged;\n}\n\nfunction _inherits(ctor, superCtor) {\n  if (typeof(Object.create) === 'function') {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  } else {\n    // old school shim for old browsers\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n}\n\n// move dependent functions to a container so that\n// they can be overriden easier in no jquery environment (node.js)\nmodule.exports = {\n  defaults: _defaults,\n  inherits: _inherits\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.helpers.js\n// module id = 1\n// module chunks = 0","var drawAPI = require('./flowchart.functions');\nvar drawLine = drawAPI.drawLine;\nvar checkLineIntersection = drawAPI.checkLineIntersection;\n\nfunction Symbol(chart, options, symbol) {\n  this.chart = chart;\n  this.group = this.chart.paper.set();\n  this.symbol = symbol;\n  this.connectedTo = [];\n  this.symbolType = options.symbolType;\n  this.flowstate = (options.flowstate || 'future');\n  this.lineStyle = (options.lineStyle || {});\n  this.key = (options.key || '');\n\n  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\n\n  this.text = this.chart.paper.text(0, 0, options.text);\n  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\n  if (options.key) { this.text.node.id = options.key + 't'; }\n  this.text.node.setAttribute('class', this.getAttr('class') + 't');\n\n  this.text.attr({\n    'text-anchor': 'start',\n    'x'          : this.getAttr('text-margin'),\n    'fill'       : this.getAttr('font-color'),\n    'font-size'  : this.getAttr('font-size')\n  });\n\n  var font  = this.getAttr('font');\n  var fontF = this.getAttr('font-family');\n  var fontW = this.getAttr('font-weight');\n\n  if (font) this.text.attr({ 'font': font });\n  if (fontF) this.text.attr({ 'font-family': fontF });\n  if (fontW) this.text.attr({ 'font-weight': fontW });\n\n  if (options.link) { this.text.attr('href', options.link); }\n  \n  //ndrqu Add click function with event and options params\n  if (options.function) { \n    this.text.attr({ 'cursor' : 'pointer' });\n\n    this.text.node.addEventListener(\"click\", function(evt) {\n        window[options.function](evt,options);\n    }, false);\n   }\n   \n  if (options.target) { this.text.attr('target', options.target); }\n\n  var maxWidth = this.getAttr('maxWidth');\n  if (maxWidth) {\n    // using this approach: http://stackoverflow.com/a/3153457/22466\n    var words = options.text.split(' ');\n    var tempText = \"\";\n    for (var i=0, ii=words.length; i<ii; i++) {\n      var word = words[i];\n      this.text.attr(\"text\", tempText + \" \" + word);\n      if (this.text.getBBox().width > maxWidth) {\n        tempText += \"\\n\" + word;\n      } else {\n        tempText += \" \" + word;\n      }\n    }\n    this.text.attr(\"text\", tempText.substring(1));\n  }\n\n  this.group.push(this.text);\n\n  if (symbol) {\n    var tmpMargin = this.getAttr('text-margin');\n\n    symbol.attr({\n      'fill' : this.getAttr('fill'),\n      'stroke' : this.getAttr('element-color'),\n      'stroke-width' : this.getAttr('line-width'),\n      'width' : this.text.getBBox().width + 2 * tmpMargin,\n      'height' : this.text.getBBox().height + 2 * tmpMargin\n    });\n\n    symbol.node.setAttribute('class', this.getAttr('class'));\n\n    if (options.link) { symbol.attr('href', options.link); }\n    if (options.target) { symbol.attr('target', options.target); }\n\n    //ndrqu Add click function with event and options params\n    if (options.function) { \n        symbol.node.addEventListener(\"click\", function(evt) {\n          window[options.function](evt,options);\n        }, false);\n      symbol.attr({ 'cursor' : 'pointer' });\n    }\n    if (options.key) { symbol.node.id = options.key; }\n\n    this.group.push(symbol);\n    symbol.insertBefore(this.text);\n\n    this.text.attr({\n      'y': symbol.getBBox().height/2\n    });\n\n    this.initialize();\n  }\n\n}\n\n/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\nSymbol.prototype.getAttr = function(attName) {\n  if (!this.chart) {\n    return undefined;\n  }\n  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\n  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\n  var opt1;\n  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\n    opt1 = this.chart.options.flowstate[this.flowstate][attName];\n  }\n  return (opt1 || opt2 || opt3);\n};\n\nSymbol.prototype.initialize = function() {\n  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\n\n  this.width = this.group.getBBox().width;\n  this.height = this.group.getBBox().height;\n};\n\nSymbol.prototype.getCenter = function() {\n  return {x: this.getX() + this.width/2,\n          y: this.getY() + this.height/2};\n};\n\nSymbol.prototype.getX = function() {\n  return this.group.getBBox().x;\n};\n\nSymbol.prototype.getY = function() {\n  return this.group.getBBox().y;\n};\n\nSymbol.prototype.shiftX = function(x) {\n  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\n};\n\nSymbol.prototype.setX = function(x) {\n  this.group.transform('t' + x + ',' + this.getY());\n};\n\nSymbol.prototype.shiftY = function(y) {\n  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\n};\n\nSymbol.prototype.setY = function(y) {\n  this.group.transform('t' + this.getX() + ',' + y);\n};\n\nSymbol.prototype.getTop = function() {\n  var y = this.getY();\n  var x = this.getX() + this.width/2;\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getBottom = function() {\n  var y = this.getY() + this.height;\n  var x = this.getX() + this.width/2;\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getLeft = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX();\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getRight = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX() + this.group.getBBox().width;\n  return {x: x, y: y};\n};\n\nSymbol.prototype.render = function() {\n  if (this.next) {\n\n    var self = this;\n    var lineLength = this.getAttr('line-length');\n\n    if (this.next_direction === 'right') {\n\n      var rightPoint = this.getRight();\n\n      if (!this.next.isPositioned) {\n        this.next.setY(rightPoint.y - this.next.height/2);\n        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\n\n        (function shift() {\n          var hasSymbolUnder = false;\n          var symb;\n          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n            symb = self.chart.symbols[i];\n\n            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\n            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\n              hasSymbolUnder = true;\n              break;\n            }\n          }\n\n          if (hasSymbolUnder) {\n            if (self.next.symbolType === 'end') return;\n            self.next.setX(symb.getX() + symb.width + lineLength);\n            shift();\n          }\n        })();\n\n        this.next.isPositioned = true;\n\n        this.next.render();\n      }\n    } else if (this.next_direction === 'left') {\n\n      var leftPoint = this.getLeft();\n\n      if (!this.next.isPositioned) {\n        this.next.setY(leftPoint.y - this.next.height/2);\n        this.next.shiftX(-(this.group.getBBox().x + this.width + lineLength));\n\n        (function shift() {\n          var hasSymbolUnder = false;\n          var symb;\n          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n            symb = self.chart.symbols[i];\n\n            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\n            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\n              hasSymbolUnder = true;\n              break;\n            }\n          }\n\n          if (hasSymbolUnder) {\n            if (self.next.symbolType === 'end') return;\n            self.next.setX(symb.getX() + symb.width + lineLength);\n            shift();\n          }\n        })();\n\n        this.next.isPositioned = true;\n\n        this.next.render();\n      }\n    } else {\n      var bottomPoint = this.getBottom();\n\n      if (!this.next.isPositioned) {\n        this.next.shiftY(this.getY() + this.height + lineLength);\n        this.next.setX(bottomPoint.x - this.next.width/2);\n        this.next.isPositioned = true;\n\n        this.next.render();\n      }\n    }\n  }\n};\n\nSymbol.prototype.renderLines = function() {\n  if (this.next) {\n    if (this.next_direction) {\n      this.drawLineTo(this.next, this.getAttr('arrow-text') || '', this.next_direction);\n    } else {\n      this.drawLineTo(this.next, this.getAttr('arrow-text') || '');\n    }\n  }\n};\n\nSymbol.prototype.drawLineTo = function(symbol, text, origin) {\n  if (this.connectedTo.indexOf(symbol) < 0) {\n    this.connectedTo.push(symbol);\n  }\n\n  var x = this.getCenter().x,\n      y = this.getCenter().y,\n      right = this.getRight(),\n      bottom = this.getBottom(),\n      top = this.getTop(),\n      left = this.getLeft();\n\n  var symbolX = symbol.getCenter().x,\n      symbolY = symbol.getCenter().y,\n      symbolTop = symbol.getTop(),\n      symbolRight = symbol.getRight(),\n      symbolLeft = symbol.getLeft();\n\n  var isOnSameColumn = x === symbolX,\n      isOnSameLine = y === symbolY,\n      isUnder = y < symbolY,\n      isUpper = y > symbolY || this === symbol,\n      isLeft = x > symbolX,\n      isRight = x < symbolX;\n\n  var maxX = 0,\n      line,\n      lineLength = this.getAttr('line-length'),\n      lineWith = this.getAttr('line-width');\n\n  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\n    line = drawLine(this.chart, bottom, symbolTop, text);\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x;\n  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\n    line = drawLine(this.chart, right, symbolLeft, text);\n    this.rightStart = true;\n    symbol.leftEnd = true;\n    maxX = symbolLeft.x;\n  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\n    line = drawLine(this.chart, left, symbolRight, text);\n    this.leftStart = true;\n    symbol.rightEnd = true;\n    maxX = symbolRight.x;\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\n    line = drawLine(this.chart, right, [\n      {x: right.x + lineLength/2, y: right.y},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\n    line = drawLine(this.chart, right, [\n      {x: right.x + lineLength/2, y: right.y},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((!origin || origin === 'bottom') && isLeft) {\n    if (this.leftEnd && isUpper) {\n      line = drawLine(this.chart, bottom, [\n        {x: bottom.x, y: bottom.y + lineLength/2},\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y}\n      ], text);\n    } else {\n      line = drawLine(this.chart, bottom, [\n        {x: bottom.x, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y}\n      ], text);\n    }\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n  } else if ((!origin || origin === 'bottom') && isRight && isUnder) {\n    line = drawLine(this.chart, bottom, [\n      {x: bottom.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x;\n    if (symbolTop.x > maxX) maxX = symbolTop.x;\n  } else if ((!origin || origin === 'bottom') && isRight) {\n    line = drawLine(this.chart, bottom, [\n      {x: bottom.x, y: bottom.y + lineLength/2},\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n  } else if ((origin && origin === 'right') && isLeft) {\n    line = drawLine(this.chart, right, [\n      {x: right.x + lineLength/2, y: right.y},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((origin && origin === 'right') && isRight) {\n    line = drawLine(this.chart, right, [\n      {x: symbolTop.x, y: right.y},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\n    line = drawLine(this.chart, bottom, [\n      {x: bottom.x, y: bottom.y + lineLength/2},\n      {x: right.x + lineLength/2, y: bottom.y + lineLength/2},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x + lineLength/2;\n  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\n    var diffX = left.x - lineLength/2;\n    if (symbolLeft.x < left.x) {\n      diffX = symbolLeft.x - lineLength/2;\n    }\n    line = drawLine(this.chart, left, [\n      {x: diffX, y: left.y},\n      {x: diffX, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.leftStart = true;\n    symbol.topEnd = true;\n    maxX = left.x;\n  } else if ((origin === 'left')) {\n    line = drawLine(this.chart, left, [\n      {x: symbolTop.x + (left.x - symbolTop.x)/2, y: left.y},\n      {x: symbolTop.x + (left.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.leftStart = true;\n    symbol.topEnd = true;\n    maxX = left.x;\n  } else if ((origin === 'top')) {\n    line = drawLine(this.chart, top, [\n      {x: top.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.topStart = true;\n    symbol.topEnd = true;\n    maxX = top.x;\n  }\n\n  //update line style\n  if (this.lineStyle[symbol.key] && line){\n    line.attr(this.lineStyle[symbol.key]);\n  }\n\n  if (line) {\n    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\n      var otherLine = this.chart.lines[l];\n      var len;\n\n      var ePath = otherLine.attr('path'),\n          lPath = line.attr('path');\n\n      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\n        var newPath = [];\n        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\n        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\n\n        var line1_from_x = newPath[0][1];\n        var line1_from_y = newPath[0][2];\n        var line1_to_x = newPath[1][1];\n        var line1_to_y = newPath[1][2];\n\n        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\n          var newLinePath = [];\n          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\n          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\n\n          var line2_from_x = newLinePath[0][1];\n          var line2_from_y = newLinePath[0][2];\n          var line2_to_x = newLinePath[1][1];\n          var line2_to_y = newLinePath[1][2];\n\n          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\n          if (res.onLine1 && res.onLine2) {\n\n            var newSegment;\n            if (line2_from_y === line2_to_y) {\n              if (line2_from_x > line2_to_x) {\n                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              } else {\n                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              }\n            } else {\n              if (line2_from_y > line2_to_y) {\n                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              } else {\n                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              }\n            }\n\n            lP += 2;\n            len += 2;\n          }\n        }\n      }\n    }\n\n    this.chart.lines.push(line);\n    if (this.chart.minXFromSymbols === undefined || this.chart.minXFromSymbols > left.x) {\n      this.chart.minXFromSymbols = left.x;\n    }\n  }\n\n  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\n    this.chart.maxXFromLine = maxX;\n  }\n};\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.js\n// module id = 2\n// module chunks = 0","function drawPath(chart, location, points) {\n  var i, len;\n  var path = 'M{0},{1}';\n  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\n    path += ' L{' + i + '},{' + (i + 1) + '}';\n  }\n  var pathValues = [location.x, location.y];\n  for (i = 0, len = points.length; i < len; i++) {\n    pathValues.push(points[i].x);\n    pathValues.push(points[i].y);\n  }\n  var symbol = chart.paper.path(path, pathValues);\n  symbol.attr('stroke', chart.options['element-color']);\n  symbol.attr('stroke-width', chart.options['line-width']);\n\n  var font = chart.options.font;\n  var fontF = chart.options['font-family'];\n  var fontW = chart.options['font-weight'];\n\n  if (font) symbol.attr({ 'font': font });\n  if (fontF) symbol.attr({ 'font-family': fontF });\n  if (fontW) symbol.attr({ 'font-weight': fontW });\n\n  return symbol;\n}\n\nfunction drawLine(chart, from, to, text) {\n  var i, len;\n\n  if (Object.prototype.toString.call(to) !== '[object Array]') {\n    to = [to];\n  }\n\n  var path = 'M{0},{1}';\n  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\n    path += ' L{' + i + '},{' + (i + 1) + '}';\n  }\n  var pathValues = [from.x, from.y];\n  for (i = 0, len = to.length; i < len; i++) {\n    pathValues.push(to[i].x);\n    pathValues.push(to[i].y);\n  }\n\n  var line = chart.paper.path(path, pathValues);\n  line.attr({\n    stroke: chart.options['line-color'],\n    'stroke-width': chart.options['line-width'],\n    'arrow-end': chart.options['arrow-end']\n  });\n\n  var font = chart.options.font;\n  var fontF = chart.options['font-family'];\n  var fontW = chart.options['font-weight'];\n\n  if (font) line.attr({ 'font': font });\n  if (fontF) line.attr({ 'font-family': fontF });\n  if (fontW) line.attr({ 'font-weight': fontW });\n\n  if (text) {\n\n    var centerText = false;\n\n    var textPath = chart.paper.text(0, 0, text);\n\n    var isHorizontal = false;\n    var firstTo = to[0];\n\n    if (from.y === firstTo.y) {\n      isHorizontal = true;\n    }\n\n    var x = 0,\n        y = 0;\n\n    if (centerText) {\n      if (from.x > firstTo.x) {\n        x = from.x - (from.x - firstTo.x)/2;\n      } else {\n        x = firstTo.x - (firstTo.x - from.x)/2;\n      }\n\n      if (from.y > firstTo.y) {\n        y = from.y - (from.y - firstTo.y)/2;\n      } else {\n        y = firstTo.y - (firstTo.y - from.y)/2;\n      }\n\n      if (isHorizontal) {\n        x -= textPath.getBBox().width/2;\n        y -= chart.options['text-margin'];\n      } else {\n        x += chart.options['text-margin'];\n        y -= textPath.getBBox().height/2;\n      }\n    } else {\n      x = from.x;\n      y = from.y;\n\n      if (isHorizontal) {\n        x += chart.options['text-margin']/2;\n        y -= chart.options['text-margin'];\n      } else {\n        x += chart.options['text-margin']/2;\n        y += chart.options['text-margin'];\n        if (from.y > firstTo.y) {\n          y -= chart.options['text-margin']*2;\n        }\n      }\n    }\n\n    textPath.attr({\n      'text-anchor': 'start',\n      'font-size': chart.options['font-size'],\n      'fill': chart.options['font-color'],\n      x: x,\n      y: y\n    });\n\n    if (font) textPath.attr({ 'font': font });\n    if (fontF) textPath.attr({ 'font-family': fontF });\n    if (fontW) textPath.attr({ 'font-weight': fontW });\n  }\n\n  return line;\n}\n\nfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n  var denominator, a, b, numerator1, numerator2, result = {\n    x: null,\n    y: null,\n    onLine1: false,\n    onLine2: false\n  };\n  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n  if (denominator === 0) {\n    return result;\n  }\n  a = line1StartY - line2StartY;\n  b = line1StartX - line2StartX;\n  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n  a = numerator1 / denominator;\n  b = numerator2 / denominator;\n\n  // if we cast these lines infinitely in both directions, they intersect here:\n  result.x = line1StartX + (a * (line1EndX - line1StartX));\n  result.y = line1StartY + (a * (line1EndY - line1StartY));\n  /*\n  // it is worth noting that this should be the same as:\n  x = line2StartX + (b * (line2EndX - line2StartX));\n  y = line2StartX + (b * (line2EndY - line2StartY));\n  */\n  // if line1 is a segment and line2 is infinite, they intersect if:\n  if (a > 0 && a < 1) {\n    result.onLine1 = true;\n  }\n  // if line2 is a segment and line1 is infinite, they intersect if:\n  if (b > 0 && b < 1) {\n    result.onLine2 = true;\n  }\n  // if line1 and line2 are segments, they intersect if both of the above are true\n  return result;\n}\n\nmodule.exports = {\n\tdrawPath: drawPath,\n\tdrawLine: drawLine,\n\tcheckLineIntersection: checkLineIntersection\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.functions.js\n// module id = 3\n// module chunks = 0","var FlowChart = require('./flowchart.chart');\nvar Start = require('./flowchart.symbol.start');\nvar End = require('./flowchart.symbol.end');\nvar Operation = require('./flowchart.symbol.operation');\nvar InputOutput = require('./flowchart.symbol.inputoutput');\nvar Subroutine = require('./flowchart.symbol.subroutine');\nvar Condition = require('./flowchart.symbol.condition');\nvar Parallel = require('./flowchart.symbol.parallel');\n\nfunction parse(input) {\n  input = input || '';\n  input = input.trim();\n\n  var chart = {\n    symbols: {},\n    start: null,\n    drawSVG: function(container, options) {\n      var self = this;\n\n      if (this.diagram) {\n        this.diagram.clean();\n      }\n\n      var diagram = new FlowChart(container, options);\n      this.diagram = diagram;\n      var dispSymbols = {};\n\n      function getDisplaySymbol(s) {\n        if (dispSymbols[s.key]) {\n          return dispSymbols[s.key];\n        }\n\n        switch (s.symbolType) {\n          case 'start':\n            dispSymbols[s.key] = new Start(diagram, s);\n            break;\n          case 'end':\n            dispSymbols[s.key] = new End(diagram, s);\n            break;\n          case 'operation':\n            dispSymbols[s.key] = new Operation(diagram, s);\n            break;\n          case 'inputoutput':\n            dispSymbols[s.key] = new InputOutput(diagram, s);\n            break;\n          case 'subroutine':\n            dispSymbols[s.key] = new Subroutine(diagram, s);\n            break;\n          case 'condition':\n            dispSymbols[s.key] = new Condition(diagram, s);\n            break;\n          case 'parallel':\n            dispSymbols[s.key] = new Parallel(diagram, s);\n            break;\n          default:\n            return new Error('Wrong symbol type!');\n        }\n\n        return dispSymbols[s.key];\n      }\n\n      (function constructChart(s, prevDisp, prev) {\n        var dispSymb = getDisplaySymbol(s);\n\n        if (self.start === s) {\n          diagram.startWith(dispSymb);\n        } else if (prevDisp && prev && !prevDisp.pathOk) {\n          if (prevDisp instanceof(Condition)) {\n            if (prev.yes === s) {\n              prevDisp.yes(dispSymb);\n            }\n            if (prev.no === s) {\n              prevDisp.no(dispSymb);\n            }\n          } else if (prevDisp instanceof(Parallel)) {\n            if (prev.path1 === s) {\n              prevDisp.path1(dispSymb);\n            }\n            if (prev.path2 === s) {\n              prevDisp.path2(dispSymb);\n            }\n            if (prev.path3 === s) {\n              prevDisp.path3(dispSymb);\n            }\n          } else {\n            prevDisp.then(dispSymb);\n          }\n        }\n\n        if (dispSymb.pathOk) {\n          return dispSymb;\n        }\n\n        if (dispSymb instanceof(Condition)) {\n          if (s.yes) {\n            constructChart(s.yes, dispSymb, s);\n          }\n          if (s.no) {\n            constructChart(s.no, dispSymb, s);\n          }\n        } else if (dispSymb instanceof(Parallel)) {\n          if (s.path1) {\n            constructChart(s.path1, dispSymb, s);\n          }\n          if (s.path2) {\n            constructChart(s.path2, dispSymb, s);\n          }\n          if (s.path3) {\n            constructChart(s.path3, dispSymb, s);\n          }\n        } else if (s.next) {\n          constructChart(s.next, dispSymb, s);\n        }\n\n        return dispSymb;\n      })(this.start);\n\n      diagram.render();\n    },\n    clean: function() {\n      this.diagram.clean();\n    }\n  };\n\n  var lines = [];\n  var prevBreak = 0;\n  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\n    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\n      var line0 = input.substring(prevBreak, i0);\n      prevBreak = i0 + 1;\n      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\n    }\n  }\n\n  if (prevBreak < input.length) {\n    lines.push(input.substr(prevBreak));\n  }\n\n  for (var l = 1, len = lines.length; l < len;) {\n    var currentLine = lines[l];\n\n    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0 && currentLine.indexOf('@>') < 0) {\n      lines[l - 1] += '\\n' + currentLine;\n      lines.splice(l, 1);\n      len--;\n    } else {\n      l++;\n    }\n  }\n\n  function getStyle(s){\n    var startIndex = s.indexOf('(') + 1;\n    var endIndex = s.indexOf(')');\n    if (startIndex >= 0 && endIndex >= 0) {\n      return s.substring(startIndex,endIndex);\n    }\n    return '{}';\n  }\n\n  function getSymbValue(s){\n    var startIndex = s.indexOf('(') + 1;\n    var endIndex = s.indexOf(')');\n    if (startIndex >= 0 && endIndex >= 0) {\n      return s.substring(startIndex,endIndex);\n    }\n    return '';\n  }\n\n  function getSymbol(s) {\n    var startIndex = s.indexOf('(') + 1;\n    var endIndex = s.indexOf(')');\n    if (startIndex >= 0 && endIndex >= 0) {\n      return chart.symbols[s.substring(0, startIndex - 1)];\n    }\n    return chart.symbols[s];\n  }\n\n  function getNextPath(s) {\n    var next = 'next';\n    var startIndex = s.indexOf('(') + 1;\n    var endIndex = s.indexOf(')');\n    if (startIndex >= 0 && endIndex >= 0) {\n      next = flowSymb.substring(startIndex, endIndex);\n      if (next.indexOf(',') < 0) {\n        if (next !== 'yes' && next !== 'no') {\n          next = 'next, ' + next;\n        }\n      }\n    }\n    return next;\n  }\n\n  while (lines.length > 0) {\n    var line = lines.splice(0, 1)[0].trim();\n\n    if (line.indexOf('=>') >= 0) {\n      // definition\n      var parts = line.split('=>');\n      var symbol = {\n        key: parts[0].replace(/\\(.*\\)/, ''),\n        symbolType: parts[1],\n        text: null,\n        link: null,\n        target: null,\n        flowstate: null,\n        function: null,\n        lineStyle: {},\n        params: {}\n      };\n\n      //parse parameters\n      var params = parts[0].match(/\\((.*)\\)/);\n      if (params && params.length > 1){\n        var entries = params[1].split(',');\n        for(var i = 0; i < entries.length; i++) {\n          var entry = entries[0].split('=');\n          if (entry.length == 2) {\n            symbol.params[entry[0]] = entry[1];\n          }\n        }\n      }\n\n      var sub;\n\n      if (symbol.symbolType.indexOf(': ') >= 0) {\n        sub = symbol.symbolType.split(': ');\n        symbol.symbolType = sub.shift();\n        symbol.text = sub.join(': ');\n      }\n\n      if (symbol.text && symbol.text.indexOf(':$') >= 0) {\n        sub = symbol.text.split(':$');\n        symbol.text = sub.shift();\n        symbol.function = sub.join(':$');\n      } else if (symbol.symbolType.indexOf(':$') >= 0) {\n        sub = symbol.symbolType.split(':$');\n        symbol.symbolType = sub.shift();\n        symbol.function = sub.join(':$');\n      } else if (symbol.text && symbol.text.indexOf(':>') >= 0) {\n        sub = symbol.text.split(':>');\n        symbol.text = sub.shift();\n        symbol.link = sub.join(':>');\n      } else if (symbol.symbolType.indexOf(':>') >= 0) {\n        sub = symbol.symbolType.split(':>');\n        symbol.symbolType = sub.shift();\n        symbol.link = sub.join(':>');\n      }\n\n      if (symbol.symbolType.indexOf('\\n') >= 0) {\n        symbol.symbolType = symbol.symbolType.split('\\n')[0];\n      }\n\n      /* adding support for links */\n      if (symbol.link) {\n        var startIndex = symbol.link.indexOf('[') + 1;\n        var endIndex = symbol.link.indexOf(']');\n        if (startIndex >= 0 && endIndex >= 0) {\n          symbol.target = symbol.link.substring(startIndex, endIndex);\n          symbol.link = symbol.link.substring(0, startIndex - 1);\n        }\n      }\n      /* end of link support */\n\n      /* adding support for flowstates */\n      if (symbol.text) {\n        if (symbol.text.indexOf('|') >= 0) {\n          var txtAndState = symbol.text.split('|');\n          symbol.flowstate = txtAndState.pop().trim();\n          symbol.text = txtAndState.join('|');\n        }\n      }\n      /* end of flowstate support */\n\n      chart.symbols[symbol.key] = symbol;\n\n    } else if (line.indexOf('->') >= 0) {\n      // flow\n      var flowSymbols = line.split('->');\n      for (var i = 0, lenS = flowSymbols.length; i < lenS; i++) {\n        var flowSymb = flowSymbols[i];\n        var symbVal = getSymbValue(flowSymb);\n\n        if (symbVal === 'true' || symbVal === 'false') {\n          // map true or false to yes or no respectively\n          flowSymb = flowSymb.replace('true', 'yes');\n          flowSymb = flowSymb.replace('false', 'no');\n        }\n\n        var realSymb = getSymbol(flowSymb);\n        var next = getNextPath(flowSymb);\n\n        var direction = null;\n        if (next.indexOf(',') >= 0) {\n          var condOpt = next.split(',');\n          next = condOpt[0];\n          direction = condOpt[1].trim();\n        }\n\n        if (!chart.start) {\n          chart.start = realSymb;\n        }\n\n        if (i + 1 < lenS) {\n          var nextSymb = flowSymbols[i + 1];\n          realSymb[next] = getSymbol(nextSymb);\n          realSymb['direction_' + next] = direction;\n          direction = null;\n        }\n      }\n    } else if (line.indexOf('@>') >= 0) {\n\n      // line style\n      var lineStyleSymbols = line.split('@>');\n      for (var i = 0, lenS = lineStyleSymbols.length; i < lenS; i++) {\n        if ((i + 1) != lenS) {\n          var curSymb = getSymbol(lineStyleSymbols[i]);\n          var nextSymb = getSymbol(lineStyleSymbols[i+1]);\n\n          curSymb['lineStyle'][nextSymb.key] = JSON.parse(getStyle(lineStyleSymbols[i + 1]));\n        }\n      }\n    }\n\n  }\n  return chart;\n}\n\nmodule.exports = parse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.parse.js\n// module id = 4\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\nvar drawAPI = require('./flowchart.functions');\nvar drawPath = drawAPI.drawPath;\n\nfunction Condition(chart, options) {\n  options = options || {};\n  Symbol.call(this, chart, options);\n  this.textMargin = this.getAttr('text-margin');\n  this.yes_direction = 'bottom';\n  this.no_direction = 'right';\n  this.params = options.params;\n  if (options.yes && options.direction_yes && options.no && !options.direction_no) {\n    if (options.direction_yes === 'right') {\n      this.no_direction = 'bottom';\n      this.yes_direction = 'right';\n    } else if (options.direction_yes === 'top') {\n      this.no_direction = 'right';\n      this.yes_direction = 'top';\n    } else {\n      this.no_direction = 'right';\n      this.yes_direction = 'bottom';\n    }\n  } else if (options.yes && !options.direction_yes && options.no && options.direction_no) {\n    if (options.direction_no === 'right') {\n      this.yes_direction = 'bottom';\n      this.no_direction = 'right';\n    } else {\n      this.yes_direction = 'right';\n      this.no_direction = 'bottom';\n    }\n  } else if (options.yes && options.direction_yes && options.no && options.direction_no && options.direction_no !== options.direction_yes) {\n    if (options.direction_yes === 'right') {\n      this.no_direction = 'bottom';\n      this.yes_direction = 'right';\n    } else if (options.direction_yes === 'top') {\n      this.no_direction = 'right';\n      this.yes_direction = 'top';\n    } else {\n      this.no_direction = 'right';\n      this.yes_direction = 'bottom';\n    }\n  } else {\n    this.yes_direction = 'bottom';\n    this.no_direction = 'right';\n  }\n\n  this.yes_direction = this.yes_direction || 'bottom';\n  this.no_direction = this.no_direction || 'right';\n\n  this.text.attr({\n    x: this.textMargin * 2\n  });\n\n  var width = this.text.getBBox().width + 3 * this.textMargin;\n  width += width/2;\n  var height = this.text.getBBox().height + 2 * this.textMargin;\n  height += height/2;\n  height = Math.max(width * 0.5, height);\n  var startX = width/4;\n  var startY = height/4;\n\n  this.text.attr({\n    x: startX + this.textMargin/2\n  });\n\n  var start = {x: startX, y: startY};\n  var points = [\n    {x: startX - width/4, y: startY + height/4},\n    {x: startX - width/4 + width/2, y: startY + height/4 + height/2},\n    {x: startX - width/4 + width, y: startY + height/4},\n    {x: startX - width/4 + width/2, y: startY + height/4 - height/2},\n    {x: startX - width/4, y: startY + height/4}\n  ];\n\n  var symbol = drawPath(chart, start, points);\n\n  symbol.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n  if (options.link) { symbol.attr('href', options.link); }\n  if (options.target) { symbol.attr('target', options.target); }\n  if (options.key) { symbol.node.id = options.key; }\n  symbol.node.setAttribute('class', this.getAttr('class'));\n\n  this.text.attr({\n    y: symbol.getBBox().height/2\n  });\n\n  this.group.push(symbol);\n  symbol.insertBefore(this.text);\n\n  this.initialize();\n}\ninherits(Condition, Symbol);\n\nCondition.prototype.render = function() {\n\n  if (this.yes_direction) {\n    this[this.yes_direction + '_symbol'] = this.yes_symbol;\n  }\n\n  if (this.no_direction) {\n    this[this.no_direction + '_symbol'] = this.no_symbol;\n  }\n\n  var lineLength = this.getAttr('line-length');\n\n  if (this.bottom_symbol) {\n    var bottomPoint = this.getBottom();\n\n    if (!this.bottom_symbol.isPositioned) {\n      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\n      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\n      this.bottom_symbol.isPositioned = true;\n\n      this.bottom_symbol.render();\n    }\n  }\n\n  if (this.right_symbol) {\n    var rightPoint = this.getRight();\n\n    if (!this.right_symbol.isPositioned) {\n\n      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\n      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\n\n      var self = this;\n      (function shift() {\n        var hasSymbolUnder = false;\n        var symb;\n        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n          symb = self.chart.symbols[i];\n\n          if (!self.params['align-next'] || self.params['align-next'] !== 'no') { \n            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\n            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\n              hasSymbolUnder = true;\n              break;\n            }\n          }\n        }\n\n        if (hasSymbolUnder) {\n          if (self.right_symbol.symbolType === 'end') return;\n          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\n          shift();\n        }\n      })();\n\n      this.right_symbol.isPositioned = true;\n\n      this.right_symbol.render();\n    }\n  }\n};\n\nCondition.prototype.renderLines = function() {\n  if (this.yes_symbol) {\n    this.drawLineTo(this.yes_symbol, this.getAttr('yes-text'), this.yes_direction);\n  }\n\n  if (this.no_symbol) {\n    this.drawLineTo(this.no_symbol, this.getAttr('no-text'), this.no_direction);\n  }\n};\n\nmodule.exports = Condition;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.condition.js\n// module id = 5\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction Parallel(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0);\n  options = options || {};\n  Symbol.call(this, chart, options, symbol);\n  this.textMargin = this.getAttr('text-margin');\n  this.path1_direction = 'bottom';\n  this.path2_direction = 'right';\n  this.path3_direction = 'top';\n  this.params = options.params;\n  if (options.direction_next === 'path1' && !options[options.direction_next] && options.next) {\n    options[options.direction_next] = options.next;\n  }\n  if (options.direction_next === 'path2' && !options[options.direction_next] && options.next) {\n    options[options.direction_next] = options.next;\n  }\n  if (options.direction_next === 'path3' && !options[options.direction_next] && options.next) {\n    options[options.direction_next] = options.next;\n  }\n\n  if (options.path1 && options.direction_path1 && options.path2 && !options.direction_path2 && options.path3 && !options.direction_path3) {\n    if (options.direction_path1 === 'right') {\n      this.path2_direction = 'bottom';\n      this.path1_direction = 'right';\n      this.path3_direction = 'top';\n    } else if (options.direction_path1 === 'top') {\n      this.path2_direction = 'right';\n      this.path1_direction = 'top';\n      this.path3_direction = 'bottom';\n    } else if (options.direction_path1 === 'left') {\n      this.path2_direction = 'right';\n      this.path1_direction = 'left';\n      this.path3_direction = 'bottom';\n    } else {\n      this.path2_direction = 'right';\n      this.path1_direction = 'bottom';\n      this.path3_direction = 'top';\n    }\n  } else if (options.path1 && !options.direction_path1 && options.path2 && options.direction_path2 && options.path3 && !options.direction_path3) {\n    if (options.direction_path2 === 'right') {\n      this.path1_direction = 'bottom';\n      this.path2_direction = 'right';\n      this.path3_direction = 'top';\n    } else if (options.direction_path2 === 'left') {\n      this.path1_direction = 'bottom';\n      this.path2_direction = 'left';\n      this.path3_direction = 'right';\n    } else {\n      this.path1_direction = 'right';\n      this.path2_direction = 'bottom';\n      this.path3_direction = 'top';\n    }\n  } else if (options.path1 && !options.direction_path1 && options.path2 && !options.direction_path2 && options.path3 && options.direction_path3) {\n    if (options.direction_path2 === 'right') {\n      this.path1_direction = 'bottom';\n      this.path2_direction = 'top';\n      this.path3_direction = 'right';\n    } else if (options.direction_path2 === 'left') {\n      this.path1_direction = 'bottom';\n      this.path2_direction = 'right';\n      this.path3_direction = 'left';\n    } else {\n      this.path1_direction = 'right';\n      this.path2_direction = 'bottom';\n      this.path3_direction = 'top';\n    }\n  } else {\n    this.path1_direction = options.direction_path1;\n    this.path2_direction = options.direction_path2;\n    this.path3_direction = options.direction_path3;\n  }\n\n  this.path1_direction = this.path1_direction || 'bottom';\n  this.path2_direction = this.path2_direction || 'right';\n  this.path3_direction = this.path3_direction || 'top';\n\n  this.initialize();\n}\ninherits(Parallel, Symbol);\n\nParallel.prototype.render = function() {\n\n  if (this.path1_direction) {\n    this[this.path1_direction + '_symbol'] = this.path1_symbol;\n  }\n\n  if (this.path2_direction) {\n    this[this.path2_direction + '_symbol'] = this.path2_symbol;\n  }\n\n  if (this.path3_direction) {\n    this[this.path3_direction + '_symbol'] = this.path3_symbol;\n  }\n\n  var lineLength = this.getAttr('line-length');\n\n  if (this.bottom_symbol) {\n    var bottomPoint = this.getBottom();\n\n    if (!this.bottom_symbol.isPositioned) {\n      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\n      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width / 2);\n      this.bottom_symbol.isPositioned = true;\n\n      this.bottom_symbol.render();\n    }\n  }\n\n  if (this.top_symbol) {\n    var topPoint = this.getTop();\n\n    if (!this.top_symbol.isPositioned) {\n      this.top_symbol.shiftY(this.getY() - this.top_symbol.height - lineLength);\n      this.top_symbol.setX(topPoint.x + this.top_symbol.width);\n      this.top_symbol.isPositioned = true;\n\n      this.top_symbol.render();\n    }\n  }\n\n  var self = this;\n\n  if (this.left_symbol) {\n    var leftPoint = this.getLeft();\n\n    if (!this.left_symbol.isPositioned) {\n      this.left_symbol.setY(leftPoint.y - this.left_symbol.height / 2);\n      this.left_symbol.shiftX(-(this.group.getBBox().x + this.width + lineLength));\n      (function shift() {\n        var hasSymbolUnder = false;\n        var symb;\n        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n          symb = self.chart.symbols[i];\n\n          if (!self.params['align-next'] || self.params['align-next'] !== 'no') {\n            var diff = Math.abs(symb.getCenter().x - self.left_symbol.getCenter().x);\n            if (symb.getCenter().y > self.left_symbol.getCenter().y && diff <= self.left_symbol.width / 2) {\n              hasSymbolUnder = true;\n              break;\n            }\n          }\n        }\n\n        if (hasSymbolUnder) {\n          if (self.left_symbol.symbolType === 'end') return;\n          self.left_symbol.setX(symb.getX() + symb.width + lineLength);\n          shift();\n        }\n      })();\n\n      this.left_symbol.isPositioned = true;\n\n      this.left_symbol.render();\n    }\n  }\n\n  if (this.right_symbol) {\n    var rightPoint = this.getRight();\n\n    if (!this.right_symbol.isPositioned) {\n      this.right_symbol.setY(rightPoint.y - this.right_symbol.height / 2);\n      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\n      (function shift() {\n        var hasSymbolUnder = false;\n        var symb;\n        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n          symb = self.chart.symbols[i];\n\n          if (!self.params['align-next'] || self.params['align-next'] !== 'no') {\n            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\n            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width / 2) {\n              hasSymbolUnder = true;\n              break;\n            }\n          }\n        }\n\n        if (hasSymbolUnder) {\n          if (self.right_symbol.symbolType === 'end') return;\n          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\n          shift();\n        }\n      })();\n\n      this.right_symbol.isPositioned = true;\n\n      this.right_symbol.render();\n    }\n  }\n};\n\nParallel.prototype.renderLines = function() {\n  if (this.path1_symbol) {\n    this.drawLineTo(this.path1_symbol, '', this.path1_direction);\n  }\n\n  if (this.path2_symbol) {\n    this.drawLineTo(this.path2_symbol, '', this.path2_direction);\n  }\n\n  if (this.path3_symbol) {\n    this.drawLineTo(this.path3_symbol, '', this.path3_direction);\n  }\n};\n\nmodule.exports = Parallel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.parallel.js\n// module id = 6\n// module chunks = 0","var Raphael = require('raphael');\nvar defaults = require('./flowchart.helpers').defaults;\nvar defaultOptions = require('./flowchart.defaults');\nvar Condition = require('./flowchart.symbol.condition');\nvar Parallel = require('./flowchart.symbol.parallel');\n\nfunction FlowChart(container, options) {\n  options = options || {};\n\n  this.paper = new Raphael(container);\n\n  this.options = defaults(options, defaultOptions);\n\n  this.symbols = [];\n  this.lines = [];\n  this.start = null;\n}\n\nFlowChart.prototype.handle = function(symbol) {\n  if (this.symbols.indexOf(symbol) <= -1) {\n    this.symbols.push(symbol);\n  }\n\n  var flowChart = this;\n\n  if (symbol instanceof(Condition)) {\n    symbol.yes = function(nextSymbol) {\n      symbol.yes_symbol = nextSymbol;\n      if(symbol.no_symbol) {\n        symbol.pathOk = true;\n      }\n      return flowChart.handle(nextSymbol);\n    };\n    symbol.no = function(nextSymbol) {\n      symbol.no_symbol = nextSymbol;\n      if (symbol.yes_symbol) {\n        symbol.pathOk = true;\n      }\n      return flowChart.handle(nextSymbol);\n    };\n  } else if (symbol instanceof(Parallel)) {\n    symbol.path1 = function(nextSymbol) {\n      symbol.path1_symbol = nextSymbol;\n      if (symbol.path2_symbol) {\n        symbol.pathOk = true;\n      }\n      return flowChart.handle(nextSymbol);\n    };\n    symbol.path2 = function(nextSymbol) {\n      symbol.path2_symbol = nextSymbol;\n      if (symbol.path3_symbol) {\n        symbol.pathOk = true;\n      }\n      return flowChart.handle(nextSymbol);\n    };\n    symbol.path3 = function(nextSymbol) {\n      symbol.path3_symbol = nextSymbol;\n      if (symbol.path1_symbol) {\n        symbol.pathOk = true;\n      }\n      return flowChart.handle(nextSymbol);\n    };\n  } else {\n    symbol.then = function(nextSymbol) {\n      symbol.next = nextSymbol;\n      symbol.pathOk = true;\n      return flowChart.handle(nextSymbol);\n    };\n  }\n\n  return symbol;\n};\n\nFlowChart.prototype.startWith = function(symbol) {\n  this.start = symbol;\n  return this.handle(symbol);\n};\n\nFlowChart.prototype.render = function() {\n  var maxWidth = 0,\n    maxHeight = 0,\n    i = 0,\n    len = 0,\n    maxX = 0,\n    maxY = 0,\n    minX = 0,\n    minY = 0,\n    symbol,\n    line;\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    if (symbol.width > maxWidth) {\n      maxWidth = symbol.width;\n    }\n    if (symbol.height > maxHeight) {\n      maxHeight = symbol.height;\n    }\n  }\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\n    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\n  }\n\n  this.start.render();\n  // for (i = 0, len = this.symbols.length; i < len; i++) {\n  //   symbol = this.symbols[i];\n  //   symbol.render();\n  // }\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    symbol.renderLines();\n  }\n\n  maxX = this.maxXFromLine;\n\n  var x;\n  var y;\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    x = symbol.getX() + symbol.width;\n    y = symbol.getY() + symbol.height;\n    if (x > maxX) {\n      maxX = x;\n    }\n    if (y > maxY) {\n      maxY = y;\n    }\n  }\n\n  for (i = 0, len = this.lines.length; i < len; i++) {\n    line = this.lines[i].getBBox();\n    x = line.x;\n    y = line.y;\n    var x2 = line.x2;\n    var y2 = line.y2;\n    if (x < minX) {\n      minX = x;\n    }\n    if (y < minY) {\n      minY = y;\n    }\n    if (x2 > maxX) {\n      maxX = x2;\n    }\n    if (y2 > maxY) {\n      maxY = y2;\n    }\n  }\n\n  var scale = this.options['scale'];\n  var lineWidth = this.options['line-width'];\n\n  if (this.minXFromSymbols < minX) minX = this.minXFromSymbols;\n\n  if (minX < 0) minX -= lineWidth;\n  if (minY < 0) minY -= lineWidth;\n\n  var width = maxX + lineWidth - minX;\n  var height = maxY + lineWidth - minY;\n\n  this.paper.setSize(width * scale, height * scale);\n  this.paper.setViewBox(minX, minY, width, height, true);\n};\n\nFlowChart.prototype.clean = function() {\n  if (this.paper) {\n    var paperDom = this.paper.canvas;\n    paperDom.parentNode.removeChild(paperDom);\n  }\n};\n\nmodule.exports = FlowChart;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.chart.js\n// module id = 7\n// module chunks = 0","// defaults\nmodule.exports = {\n  'x': 0,\n  'y': 0,\n  'line-width': 3,\n  'line-length': 50,\n  'text-margin': 10,\n  'font-size': 14,\n  'font-color': 'black',\n  // 'font': 'normal',\n  // 'font-family': 'calibri',\n  // 'font-weight': 'normal',\n  'line-color': 'black',\n  'element-color': 'black',\n  'fill': 'white',\n  'yes-text': 'yes',\n  'no-text': 'no',\n  'arrow-end': 'block',\n  'class': 'flowchart',\n  'scale': 1,\n  'symbols': {\n    'start': {},\n    'end': {},\n    'condition': {},\n    'inputoutput': {},\n    'operation': {},\n    'subroutine': {},\n    'parallel': {}\n  } //,\n  // 'flowstate' : {\n  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\n  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\n  //   'future' : { 'fill': '#FFFF99'},\n  //   'invalid': {'fill': '#444444'}\n  // }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.defaults.js\n// module id = 8\n// module chunks = 0","// add indexOf to non ECMA-262 standard compliant browsers\nif (!Array.prototype.indexOf) {\n  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n    \"use strict\";\n    if (this === null) {\n      throw new TypeError();\n    }\n    var t = Object(this);\n    var len = t.length >>> 0;\n    if (len === 0) {\n      return -1;\n    }\n    var n = 0;\n    if (arguments.length > 0) {\n      n = Number(arguments[1]);\n      if (n != n) { // shortcut for verifying if it's NaN\n        n = 0;\n      } else if (n !== 0 && n != Infinity && n != -Infinity) {\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n      }\n    }\n    if (n >= len) {\n      return -1;\n    }\n    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n    for (; k < len; k++) {\n      if (k in t && t[k] === searchElement) {\n        return k;\n      }\n    }\n    return -1;\n  };\n}\n\n// add lastIndexOf to non ECMA-262 standard compliant browsers\nif (!Array.prototype.lastIndexOf) {\n  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\n    \"use strict\";\n    if (this === null) {\n      throw new TypeError();\n    }\n    var t = Object(this);\n    var len = t.length >>> 0;\n    if (len === 0) {\n      return -1;\n    }\n    var n = len;\n    if (arguments.length > 1) {\n      n = Number(arguments[1]);\n      if (n != n) {\n        n = 0;\n      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n      }\n    }\n    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\n    for (; k >= 0; k--) {\n      if (k in t && t[k] === searchElement) {\n        return k;\n      }\n    }\n    return -1;\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function() {\n    return this.replace(/^\\s+|\\s+$/g, '');\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.shim.js\n// module id = 9\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction End(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n  options = options || {};\n  options.text = options.text || 'End';\n  Symbol.call(this, chart, options, symbol);\n}\ninherits(End, Symbol);\n\nmodule.exports = End;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.end.js\n// module id = 10\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\nvar drawAPI = require('./flowchart.functions');\nvar drawPath = drawAPI.drawPath;\n\nfunction InputOutput(chart, options) {\n  options = options || {};\n  Symbol.call(this, chart, options);\n  this.textMargin = this.getAttr('text-margin');\n\n  this.text.attr({\n    x: this.textMargin * 3\n  });\n\n  var width = this.text.getBBox().width + 4 * this.textMargin;\n  var height = this.text.getBBox().height + 2 * this.textMargin;\n  var startX = this.textMargin;\n  var startY = height/2;\n\n  var start = {x: startX, y: startY};\n  var points = [\n    {x: startX - this.textMargin, y: height},\n    {x: startX - this.textMargin + width, y: height},\n    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\n    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\n    {x: startX, y: startY}\n  ];\n\n  var symbol = drawPath(chart, start, points);\n\n  symbol.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n  if (options.link) { symbol.attr('href', options.link); }\n  if (options.target) { symbol.attr('target', options.target); }\n  if (options.key) { symbol.node.id = options.key; }\n  symbol.node.setAttribute('class', this.getAttr('class'));\n\n  this.text.attr({\n    y: symbol.getBBox().height/2\n  });\n\n  this.group.push(symbol);\n  symbol.insertBefore(this.text);\n\n  this.initialize();\n}\ninherits(InputOutput, Symbol);\n\nInputOutput.prototype.getLeft = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX() + this.textMargin;\n  return {x: x, y: y};\n};\n\nInputOutput.prototype.getRight = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX() + this.group.getBBox().width - this.textMargin;\n  return {x: x, y: y};\n};\n\nmodule.exports = InputOutput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.inputoutput.js\n// module id = 11\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction Operation(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0);\n  options = options || {};\n  Symbol.call(this, chart, options, symbol);\n}\ninherits(Operation, Symbol);\n\nmodule.exports = Operation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.operation.js\n// module id = 12\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction Start(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n  options = options || {};\n  options.text = options.text || 'Start';\n  Symbol.call(this, chart, options, symbol);\n}\ninherits(Start, Symbol);\n\nmodule.exports = Start;\n\n// Start.prototype.render = function() {\n//   if (this.next) {\n//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\n\n//     var bottomPoint = this.getBottom();\n//     var topPoint = this.next.getTop();\n\n//     if (!this.next.isPositioned) {\n//       this.next.shiftY(this.getY() + this.height + lineLength);\n//       this.next.setX(bottomPoint.x - this.next.width/2);\n//       this.next.isPositioned = true;\n\n//       this.next.render();\n//     }\n//   }\n// };\n\n// Start.prototype.renderLines = function() {\n//   if (this.next) {\n//     this.drawLineTo(this.next);\n//   }\n// };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.start.js\n// module id = 13\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction Subroutine(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0);\n  options = options || {};\n  Symbol.call(this, chart, options, symbol);\n\n  symbol.attr({\n    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\n  });\n\n  this.text.attr({\n    'x': 2 * this.getAttr('text-margin')\n  });\n\n  var innerWrap = chart.paper.rect(0, 0, 0, 0);\n  innerWrap.attr({\n    x: this.getAttr('text-margin'),\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\n    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\n    fill: this.getAttr('fill')\n  });\n  if (options.key) { innerWrap.node.id = options.key + 'i'; }\n\n  var font = this.getAttr('font');\n  var fontF = this.getAttr('font-family');\n  var fontW = this.getAttr('font-weight');\n\n  if (font) innerWrap.attr({ 'font': font });\n  if (fontF) innerWrap.attr({ 'font-family': fontF });\n  if (fontW) innerWrap.attr({ 'font-weight': fontW });\n\n  if (options.link) { innerWrap.attr('href', options.link); }\n  if (options.target) { innerWrap.attr('target', options.target); }\n  this.group.push(innerWrap);\n  innerWrap.insertBefore(this.text);\n\n  this.initialize();\n}\ninherits(Subroutine, Symbol);\n\nmodule.exports = Subroutine;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.subroutine.js\n// module id = 14\n// module chunks = 0","if (typeof jQuery != 'undefined') {\n\tvar parse = require('./flowchart.parse');\n\t(function( $ ) {\n\t\t$.fn.flowChart = function( options ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tvar $this = $(this);\n\t\t\t\tvar chart = parse($this.text());\n\t\t\t\t$this.html('');\n\t\t\t\tchart.drawSVG(this, options);\n\t\t\t});\n\t\t};\n\t})(jQuery); // eslint-disable-line\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/jquery-plugin.js\n// module id = 15\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Raphael\"\n// module id = 16\n// module chunks = 0"],"sourceRoot":""}